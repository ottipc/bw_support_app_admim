{"ast":null,"code":"var _jsxFileName = \"/home/codi/Entwicklung/workspace-webstorm/question_app_admin/src/api/apiService.js\";\nimport dataProvider from '../api/dataProvider';\nimport React from 'react';\nimport axios from \"axios\";\n/**\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\nexport const ApiService = props => {\n  const value = {};\n  return React.createElement(ApiService.Provider, {\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.children);\n};\n/**\n *\n *  get the right that belong to specified role\n *\n * @type {{deleteUserRole: myApiService.deleteUserRole, fetchRightObjectsFOrId: (function(*=): (*|Promise<unknown>)), fetchAllRights: (function(*, *): Promise<GetListResult>), createUserRole: myApiService.createUserRole, fetchRightIdsForRoles: (function(*=): (*|Promise<unknown>)), fetchAllRoleObjects: (function(): Promise<GetListResult>), fetchRoleListForUser: (function(string): Promise<GetListResult>)}}\n */\n\nconst myApiService = {\n  fetchRightIdsForRoles: function (roleIds) {\n    return dataProvider.getManyOr('role_right', {\n      id_role: roleIds\n    });\n  },\n\n  /**\n   *\n   * Insert//assign a relation of RoleRight.\n   *\n   * @param userRightIds\n   * @returns {*|Promise<unknown>}\n   */\n  fetchRightObjectsFOrId: function (userRightIds) {\n    return dataProvider.getManyOr('right', {\n      id: userRightIds\n    });\n  },\n  uploadPic: function (formData, filename, config, question_id) {\n    axios.post(\"http://o.ssystems.de:8079/uploadFile?name=\" + filename, formData, config).then(response => {\n      console.log(\"drin\");\n      console.log(response);\n      console.log(\"File :\" + filename); //let data = {question_id : };\n\n      console.log(\"Create Entry To file : \" + filename);\n      return dataProvider.create('files', {\n        data: {\n          \"question_id\": question_id,\n          \"picture_path\": filename\n        }\n      }).then(response => {\n        // success side effects go here\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n  },\n\n  /* fetchAllUserObjects: function () {\n       return dataProvider.getList('user', {\n           pagination: {\n               page: 1,\n               perPage: 20\n           },\n           sort: {\n               field: 'name',\n               order: 'asc'\n           },\n           filter: {},\n       })\n   },\n  */\n\n  /**\n   *  Getting all Roles for a specified user.\n   *\n   * @param userId\n   * @returns {Promise<GetListResult>}\n   */\n  fetchRoleListForUser: function (userId) {\n    return dataProvider.getList('user_role', {\n      pagination: {\n        page: 1,\n        perPage: 50\n      },\n      sort: {\n        field: 'id',\n        order: 'asc'\n      },\n      filter: {\n        id_user: userId\n      }\n    });\n  },\n\n  /**\n   * assign roles to User\n   *\n   * @param payload\n   */\n  createPicInDB: function (payload) {\n    dataProvider.create('files', {\n      data: payload\n    }).then(response => {// success side effects go here\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  createUserRole: function (payload) {\n    dataProvider.create('user_role', {\n      data: payload\n    }).then(response => {// success side effects go here\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n\n  /**\n   * remove roles from User\n   *\n   * @param userRoleId\n   */\n  deleteUserRole: function (userRoleId) {\n    dataProvider.delete('user_role', {\n      id: userRoleId\n    }).then(response => {// success side effects go here\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n};\nexport default myApiService;","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/question_app_admin/src/api/apiService.js"],"names":["dataProvider","React","axios","ApiService","props","value","children","myApiService","fetchRightIdsForRoles","roleIds","getManyOr","id_role","fetchRightObjectsFOrId","userRightIds","id","uploadPic","formData","filename","config","question_id","post","then","response","console","log","create","data","catch","error","fetchRoleListForUser","userId","getList","pagination","page","perPage","sort","field","order","filter","id_user","createPicInDB","payload","createUserRole","deleteUserRole","userRoleId","delete"],"mappings":"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","sourcesContent":["import dataProvider from '../api/dataProvider';\nimport React from 'react';\nimport axios from \"axios\";\n\n/**\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const ApiService = (props) => {\n    const value = {};\n\n    return (\n        <ApiService.Provider value={value}>\n            {props.children}\n        </ApiService.Provider>\n    );\n};\n/**\n *\n *  get the right that belong to specified role\n *\n * @type {{deleteUserRole: myApiService.deleteUserRole, fetchRightObjectsFOrId: (function(*=): (*|Promise<unknown>)), fetchAllRights: (function(*, *): Promise<GetListResult>), createUserRole: myApiService.createUserRole, fetchRightIdsForRoles: (function(*=): (*|Promise<unknown>)), fetchAllRoleObjects: (function(): Promise<GetListResult>), fetchRoleListForUser: (function(string): Promise<GetListResult>)}}\n */\n\nconst myApiService = {\n    fetchRightIdsForRoles: function (roleIds) {\n        return dataProvider.getManyOr('role_right', {\n            id_role: roleIds\n        });\n    },\n    /**\n     *\n     * Insert//assign a relation of RoleRight.\n     *\n     * @param userRightIds\n     * @returns {*|Promise<unknown>}\n     */\n    fetchRightObjectsFOrId: function (userRightIds) {\n        return dataProvider.getManyOr('right', {\n            id: userRightIds\n        });\n    },\n\n    uploadPic: function (formData, filename, config, question_id) {\n        axios.post(\"http://o.ssystems.de:8079/uploadFile?name=\" + filename, formData, config).then((response) => {\n            console.log(\"drin\");\n            console.log(response);\n            console.log(\"File :\" + filename)\n            //let data = {question_id : };\n            console.log(\"Create Entry To file : \" + filename)\n            \n            return dataProvider.create('files', {data: {\"question_id\" : question_id, \"picture_path\" : filename}})\n                .then(response => {\n                    // success side effects go here\n                    console.log(response);\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        })\n    },\n\n\n   /* fetchAllUserObjects: function () {\n        return dataProvider.getList('user', {\n            pagination: {\n                page: 1,\n                perPage: 20\n            },\n            sort: {\n                field: 'name',\n                order: 'asc'\n            },\n            filter: {},\n        })\n    },\n*/\n\n\n\n    /**\n     *  Getting all Roles for a specified user.\n     *\n     * @param userId\n     * @returns {Promise<GetListResult>}\n     */\n    fetchRoleListForUser: function (userId) {\n        return dataProvider.getList('user_role', {\n            pagination: {\n                page: 1,\n                perPage: 50\n            },\n            sort: {\n                field: 'id',\n                order: 'asc'\n            },\n            filter: {\n                id_user: userId\n            },\n        });\n    },\n\n    /**\n     * assign roles to User\n     *\n     * @param payload\n     */\n    createPicInDB: function (payload) {\n        dataProvider\n            .create('files', {data: payload})\n            .then(response => {\n                // success side effects go here\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    },\n\n\n\n\n    createUserRole: function (payload) {\n        dataProvider\n            .create('user_role', {data: payload})\n            .then(response => {\n                // success side effects go here\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    },\n    /**\n     * remove roles from User\n     *\n     * @param userRoleId\n     */\n    deleteUserRole: function (userRoleId) {\n        dataProvider\n            .delete('user_role', {id: userRoleId})\n            .then(response => {\n                // success side effects go here\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n};\n\n\nexport default myApiService\n"]},"metadata":{},"sourceType":"module"}