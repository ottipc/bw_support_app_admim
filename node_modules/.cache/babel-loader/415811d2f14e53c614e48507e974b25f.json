{"ast":null,"code":"var _jsxFileName = \"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/comp/userrightlistbox.js\";\nimport React from 'react';\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\nimport Chip from '@material-ui/core/Chip';\nimport LinkAnyFieldButton from \"./linkAnyFieldButton\";\nimport apiService from '../api/apiService';\n\nfunction updateState(text) {\n  this.setState({\n    text\n  });\n}\n/**\n *\n * Component for showing  RIGHTS in  user role box\n * be shown in user.js\n *\n * @component\n *\n */\n\n\nexport class UserRightBox extends React.Component {\n  /**\n   *\n   * CONSTRUCT USER-RIGHT BOX\n   *\n   * @param props\n   * @constructor\n   *\n   */\n  constructor(props) {\n    super(props); //  console.log(\"*** CONSTRUCT USER RIGHT BOX ***\");\n    // Don't call this.setState() here!\n\n    this.state = {\n      userroles: [],\n      roleRights: [],\n      rightObjects: []\n    };\n    this.setRightOfUser = this.setRightOfUser.bind(this);\n    updateState = updateState.bind(this);\n  }\n\n  updateState() {\n    this.setState({\n      shown: false\n    });\n  }\n  /**\n   *\n   *invoke WHENEVER THERE IS AN UPDATE IN USER-RIGHT BOX\n   *\n   * @param prevProps\n   * @param prevState\n   */\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (JSON.stringify(prevProps.selected) !== JSON.stringify(this.props.selected)) {\n      this.setRightOfUser();\n    }\n  }\n  /**\n   *\n   *  invoke JUST ONCE onload or reload\n   *\n   *  @function\n   *\n   */\n\n\n  componentDidMount() {\n    this.setRightOfUser();\n  }\n  /**\n   *\n   * invoke whenever the component receives new props.\n   *\n   * @param props\n   * @param state\n   * @returns {null|{cachedSomeProp: *}}\n   */\n\n\n  static getDerivedStateFromProps(props, state) {\n    return null;\n    return {\n      cachedSomeProp: props // ... other derived state properties\n\n    };\n  }\n  /**\n   *   SET RIGHT TO USER\n   *\n   * send HTTP request to get User Roles\n   * save UserRoles to the state\n   *\n   * @function\n   *\n   */\n\n\n  setRightOfUser() {\n    var self = this;\n    let currentselected = this.props.selected;\n\n    if (this) {\n      apiService.fetchRightIdsForRoles(currentselected).then(function (roleRightResponse) {\n        let roleRights = roleRightResponse == [] ? [] : roleRightResponse.data;\n        self.setState({\n          roleRights: roleRights\n        });\n        return roleRights; // pass the data as promise to next then block\n      }).then(function (userRightResponse) {\n        let roleRightIds = [];\n        userRightResponse.map((value, index) => {\n          roleRightIds.push(value.id_right);\n        });\n        /** SETTING THE NEW RIGHTS IN STATE **/\n\n        apiService.fetchRightObjectsFOrId(roleRightIds).then(function (rightResponse) {\n          let rightObjects = rightResponse == [] ? rightResponse : rightResponse.data;\n          self.setState({\n            rightObjects: rightObjects\n          });\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n  /**\n   * RENDERING USER RIGHT BOX\n   *\n   * @returns {null|*}\n   */\n\n\n  render() {\n    if (this) {\n      const rights = this.state.rightObjects;\n      return React.createElement(\"div\", {\n        className: \"diusri\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, rights.map((value, index) => {\n        let url = \"/right/\" + value.id;\n        return React.createElement(LinkAnyFieldButton, {\n          to: url,\n          key: value.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(Chip, {\n          label: value.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }));\n      })));\n    }\n\n    return null;\n  }\n\n}\nexport default UserRightBox;","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/comp/userrightlistbox.js"],"names":["React","Chip","LinkAnyFieldButton","apiService","updateState","text","setState","UserRightBox","Component","constructor","props","state","userroles","roleRights","rightObjects","setRightOfUser","bind","shown","componentDidUpdate","prevProps","prevState","JSON","stringify","selected","componentDidMount","getDerivedStateFromProps","cachedSomeProp","self","currentselected","fetchRightIdsForRoles","then","roleRightResponse","data","userRightResponse","roleRightIds","map","value","index","push","id_right","fetchRightObjectsFOrId","rightResponse","catch","err","console","log","render","rights","url","id","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\nimport Chip from '@material-ui/core/Chip';\nimport LinkAnyFieldButton from \"./linkAnyFieldButton\";\nimport apiService from '../api/apiService';\n\nfunction updateState(text) {\n    this.setState({text})\n}\n\n\n/**\n *\n * Component for showing  RIGHTS in  user role box\n * be shown in user.js\n *\n * @component\n *\n */\nexport class UserRightBox extends React.Component {\n\n    /**\n     *\n     * CONSTRUCT USER-RIGHT BOX\n     *\n     * @param props\n     * @constructor\n     *\n     */\n    constructor(props) {\n        super(props);\n        //  console.log(\"*** CONSTRUCT USER RIGHT BOX ***\");\n        // Don't call this.setState() here!\n        this.state = {\n            userroles: [],\n            roleRights: [],\n            rightObjects: []\n        };\n        this.setRightOfUser = this.setRightOfUser.bind(this);\n        updateState = updateState.bind(this)\n    }\n\n    updateState() {\n        this.setState({shown: false});\n    }\n\n    /**\n     *\n     *invoke WHENEVER THERE IS AN UPDATE IN USER-RIGHT BOX\n     *\n     * @param prevProps\n     * @param prevState\n     */\n    componentDidUpdate(prevProps, prevState) {\n\n        if (JSON.stringify(prevProps.selected) !== JSON.stringify(this.props.selected)) {\n            this.setRightOfUser();\n        }\n\n    }\n\n    /**\n     *\n     *  invoke JUST ONCE onload or reload\n     *\n     *  @function\n     *\n     */\n    componentDidMount() {\n        this.setRightOfUser();\n    }\n\n    /**\n     *\n     * invoke whenever the component receives new props.\n     *\n     * @param props\n     * @param state\n     * @returns {null|{cachedSomeProp: *}}\n     */\n    static getDerivedStateFromProps(props, state) {\n\n\n        return null;\n        return {\n            cachedSomeProp: props,\n            // ... other derived state properties\n        };\n    }\n\n\n    /**\n     *   SET RIGHT TO USER\n     *\n     * send HTTP request to get User Roles\n     * save UserRoles to the state\n     *\n     * @function\n     *\n     */\n    setRightOfUser() {\n        var self = this;\n        let currentselected = this.props.selected;\n        if (this) {\n            apiService.fetchRightIdsForRoles(currentselected).then(function (roleRightResponse) {\n                let roleRights = roleRightResponse == [] ? [] : roleRightResponse.data;\n                self.setState({\n                    roleRights: roleRights\n                });\n\n                return roleRights; // pass the data as promise to next then block\n            }).then(function (userRightResponse) {\n                let roleRightIds = [];\n                userRightResponse.map((value, index) => {\n                    roleRightIds.push(value.id_right);\n                });\n                /** SETTING THE NEW RIGHTS IN STATE **/\n                apiService.fetchRightObjectsFOrId(roleRightIds).then(function (rightResponse) {\n\n                    let rightObjects = rightResponse == [] ? rightResponse : rightResponse.data;\n                    self.setState({\n                        rightObjects: rightObjects\n                    })\n                })\n            }).catch(err => {\n                console.log(err);\n            });\n        }\n    }\n\n    /**\n     * RENDERING USER RIGHT BOX\n     *\n     * @returns {null|*}\n     */\n    render() {\n\n        if (this) {\n            const rights = this.state.rightObjects;\n            return (\n                <div className=\"diusri\" >\n                    <ul>\n                        {rights.map((value, index) => {\n                            let url = \"/right/\" + value.id;\n\n                            return <LinkAnyFieldButton to={url} key={value.id}>\n                                <Chip label={value.name}></Chip>\n                            </LinkAnyFieldButton>\n                        })\n                        }\n                    </ul>\n                </div>\n            )\n        }\n        return null;\n    }\n}\n\nexport default UserRightBox;\n"]},"metadata":{},"sourceType":"module"}