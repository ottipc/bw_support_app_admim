{"ast":null,"code":"var _jsxFileName = \"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/role.js\";\nimport React, { Fragment } from 'react';\nimport { ChipField, Create, Datagrid, NumberInput, Edit, EditButton, List, ReferenceField, ReferenceManyField, SimpleForm, SingleFieldList, TextField, TextInput } from 'react-admin';\nimport { RightListBox } from \"./comp/rightlistbox\"; // in src/posts.js\n\n/**\n *\n * creating a new role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\nexport const RoleCreate = props => /*#__PURE__*/React.createElement(Create, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(SimpleForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(TextInput, {\n  source: \"name\",\n  validate: required(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }\n})));\n\nconst validateRoleCreation = values => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.firstName = ['The Name is required'];\n  }\n\n  if (!values.age) {\n    errors.age = ['The age is required'];\n  } else if (values.age < 18) {\n    errors.age = ['Must be over 18'];\n  }\n\n  return errors;\n};\n/**\n *\n * showing list of the role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\n\nexport const RoleList = props => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(List, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(Datagrid, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(TextField, {\n  source: \"id\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(TextField, {\n  source: \"name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 17\n  }\n}), \"/*\", /*#__PURE__*/React.createElement(ReferenceManyField, {\n  label: \"Right\",\n  reference: \"role_right\",\n  target: \"id_role\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 19\n  }\n}, /*#__PURE__*/React.createElement(SingleFieldList, {\n  linkType: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 21\n  }\n}, /*#__PURE__*/React.createElement(ReferenceField, {\n  source: \"id_right\",\n  reference: \"right\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 25\n  }\n}, /*#__PURE__*/React.createElement(ChipField, {\n  source: \"name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 29\n  }\n})))), \"*/\", /*#__PURE__*/React.createElement(EditButton, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 17\n  }\n}))));\n/**\n *\n * editing a specified role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\nexport const RoleEdit = props => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(SimpleForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(TextInput, {\n  source: \"name\",\n  validate: required(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(RightListBox, {\n  id_role: props.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 13\n  }\n})));","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/role.js"],"names":["React","Fragment","ChipField","Create","Datagrid","NumberInput","Edit","EditButton","List","ReferenceField","ReferenceManyField","SimpleForm","SingleFieldList","TextField","TextInput","RightListBox","RoleCreate","props","required","validateRoleCreation","values","errors","name","firstName","age","RoleList","RoleEdit","id"],"mappings":"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","sourcesContent":["import React,{ Fragment }  from 'react';\nimport {ChipField, Create, Datagrid, NumberInput, Edit, EditButton, List, ReferenceField, ReferenceManyField, SimpleForm, SingleFieldList, TextField, TextInput} from 'react-admin';\nimport {RightListBox} from \"./comp/rightlistbox\";\n\n// in src/posts.js\n\n/**\n *\n * creating a new role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const RoleCreate = props => (\n    <Create {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" validate={required()}/>\n\n        </SimpleForm>\n    </Create>\n\n);\n\n\n\nconst validateRoleCreation = (values) => {\n    const errors = {};\n    if (!values.name) {\n        errors.firstName = ['The Name is required'];\n    }\n    if (!values.age) {\n        errors.age = ['The age is required'];\n    } else if (values.age < 18) {\n        errors.age = ['Must be over 18'];\n    }\n    return errors\n};\n\n/**\n *\n * showing list of the role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const RoleList = (props) => (\n    <Fragment>\n        <List {...props}>\n\n            <Datagrid>\n                <TextField source=\"id\" />\n                <TextField source=\"name\" />\n                /*<ReferenceManyField label=\"Right\" reference=\"role_right\" target=\"id_role\">\n                    <SingleFieldList linkType={false}>\n                        <ReferenceField source=\"id_right\" reference=\"right\">\n                            <ChipField source=\"name\" />\n                        </ReferenceField>\n                    </SingleFieldList>\n                </ReferenceManyField>*/\n                <EditButton />\n            </Datagrid>\n        </List>\n    </Fragment>\n);\n\n/**\n *\n * editing a specified role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const RoleEdit = props => (\n    <Edit {...props}>\n        <SimpleForm >\n            <TextInput source=\"name\" validate={required()}/>\n            <RightListBox id_role={props.id}/>\n        </SimpleForm>\n    </Edit>\n\n);\n\n\n\n"]},"metadata":{},"sourceType":"module"}