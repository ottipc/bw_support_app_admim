{"ast":null,"code":"var _jsxFileName = \"/home/codi/Entwicklung/workspace-webstorm/question_app_admin/src/studiesTable.js\";\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport { API_URL } from './api/dataProvider';\nexport class Tbl extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(MaterialTable, {\n      columns: [{\n        title: 'Degree Code',\n        field: 'degreecode'\n      }, {\n        title: 'Degree',\n        field: 'degree'\n      }, {\n        title: 'University',\n        field: 'university'\n      }, {\n        title: ' ImmatDate',\n        field: 'immatdate',\n        type: \"date\",\n        dateSetting: {\n          locale: \"de-DE\"\n        }\n      }, {\n        title: 'ExmatDate',\n        field: 'exmatdate',\n        type: \"date\",\n        dateSetting: {\n          locale: \"de-DE\"\n        }\n      }, {\n        title: 'ExamtReason',\n        field: 'exmatreason'\n      }, {\n        title: 'Capr_Nameeng',\n        field: 'capr_nameeng'\n      }, {\n        title: ' Capr_DegreeShort',\n        field: 'capr_degreeshort'\n      }, {\n        title: ' Is Notifiable',\n        field: 'isnotifiable'\n      }],\n      data: query => new Promise((resolve, rejec) => {\n        let url = API_URL + '/studies?addressid=eq.' + this.props.addressid;\n        fetch(url).then(response => response.json()).then(result => {\n          console.log(\"result.data\");\n          console.log(result);\n          resolve({\n            data: result\n          });\n        });\n      }),\n      options: {\n        search: false,\n        showTitle: false,\n        paging: false,\n        headerStyle: {\n          backgroundColor: \"black\",\n          color: \"white\",\n          fontSize: 12\n        },\n        rowStyle: {\n          fontSize: 13,\n          height: 20,\n          padding: 0,\n          margin: 0,\n          letterSpacing: 0.5\n        },\n        toolbar: false,\n        emptyRowsWhenPaging: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/question_app_admin/src/studiesTable.js"],"names":["React","MaterialTable","API_URL","Tbl","Component","render","title","field","type","dateSetting","locale","query","Promise","resolve","rejec","url","props","addressid","fetch","then","response","json","result","console","log","data","search","showTitle","paging","headerStyle","backgroundColor","color","fontSize","rowStyle","height","padding","margin","letterSpacing","toolbar","emptyRowsWhenPaging"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AAKA,OAAO,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAMrCC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,aAAD;AACI,MAAA,OAAO,EAAE,CACL;AAACC,QAAAA,KAAK,EAAE,aAAR;AAAuBC,QAAAA,KAAK,EAAE;AAA9B,OADK,EAEL;AAACD,QAAAA,KAAK,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAFK,EAGL;AAACD,QAAAA,KAAK,EAAE,YAAR;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAHK,EAIL;AAACD,QAAAA,KAAK,EAAE,YAAR;AAAsBC,QAAAA,KAAK,EAAE,WAA7B;AAA0CC,QAAAA,IAAI,EAAE,MAAhD;AAAwDC,QAAAA,WAAW,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT;AAArE,OAJK,EAKL;AAACJ,QAAAA,KAAK,EAAE,WAAR;AAAqBC,QAAAA,KAAK,EAAE,WAA5B;AAAyCC,QAAAA,IAAI,EAAE,MAA/C;AAAuDC,QAAAA,WAAW,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT;AAApE,OALK,EAML;AAACJ,QAAAA,KAAK,EAAE,aAAR;AAAuBC,QAAAA,KAAK,EAAE;AAA9B,OANK,EAOL;AAACD,QAAAA,KAAK,EAAE,cAAR;AAAwBC,QAAAA,KAAK,EAAE;AAA/B,OAPK,EAQL;AAACD,QAAAA,KAAK,EAAE,mBAAR;AAA6BC,QAAAA,KAAK,EAAE;AAApC,OARK,EASL;AAACD,QAAAA,KAAK,EAAE,gBAAR;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OATK,CADb;AAYI,MAAA,IAAI,EAAEI,KAAK,IACP,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC5B,YAAIC,GAAG,GAAGb,OAAO,GAAG,wBAAV,GAAqC,KAAKc,KAAL,CAAWC,SAA1D;AAEAC,QAAAA,KAAK,CAACH,GAAD,CAAL,CACKI,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,MAAM,IAAI;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAT,UAAAA,OAAO,CAAC;AAEJY,YAAAA,IAAI,EAAEH;AAFF,WAAD,CAAP;AAKH,SAVL;AAWH,OAdD,CAbR;AA8BI,MAAA,OAAO,EAAE;AAELI,QAAAA,MAAM,EAAE,KAFH;AAGLC,QAAAA,SAAS,EAAE,KAHN;AAILC,QAAAA,MAAM,EAAE,KAJH;AAMLC,QAAAA,WAAW,EAAE;AACTC,UAAAA,eAAe,EAAE,OADR;AAETC,UAAAA,KAAK,EAAE,OAFE;AAGTC,UAAAA,QAAQ,EAAE;AAHD,SANR;AAWLC,QAAAA,QAAQ,EAAE;AACND,UAAAA,QAAQ,EAAE,EADJ;AAENE,UAAAA,MAAM,EAAE,EAFF;AAGNC,UAAAA,OAAO,EAAE,CAHH;AAINC,UAAAA,MAAM,EAAE,CAJF;AAKNC,UAAAA,aAAa,EAAE;AALT,SAXL;AAkBLC,QAAAA,OAAO,EAAE,KAlBJ;AAmBLC,QAAAA,mBAAmB,EAAE;AAnBhB,OA9Bb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAyDH;;AAhEoC","sourcesContent":["import React from 'react'\nimport MaterialTable from 'material-table'\nimport {API_URL} from './api/dataProvider'\n\n\n\n\nexport class Tbl extends React.Component {\n\n\n\n\n\n    render() {\n        return (\n            <div>\n\n                <MaterialTable\n                    columns={[\n                        {title: 'Degree Code', field: 'degreecode'},\n                        {title: 'Degree', field: 'degree'},\n                        {title: 'University', field: 'university'},\n                        {title: ' ImmatDate', field: 'immatdate', type: \"date\", dateSetting: {locale: \"de-DE\"}},\n                        {title: 'ExmatDate', field: 'exmatdate', type: \"date\", dateSetting: {locale: \"de-DE\"}},\n                        {title: 'ExamtReason', field: 'exmatreason'},\n                        {title: 'Capr_Nameeng', field: 'capr_nameeng'},\n                        {title: ' Capr_DegreeShort', field: 'capr_degreeshort'},\n                        {title: ' Is Notifiable', field: 'isnotifiable'},\n                    ]}\n                    data={query =>\n                        new Promise((resolve, rejec) => {\n                            let url = API_URL + '/studies?addressid=eq.' + this.props.addressid\n\n                            fetch(url)\n                                .then(response => response.json())\n                                .then(result => {\n                                    console.log(\"result.data\");\n                                    console.log(result);\n                                    resolve({\n\n                                        data: result,\n\n                                    })\n                                })\n                        })\n\n                    }\n                    options={{\n\n                        search: false,\n                        showTitle: false,\n                        paging: false,\n\n                        headerStyle: {\n                            backgroundColor: \"black\",\n                            color: \"white\",\n                            fontSize: 12,\n                        },\n                        rowStyle: {\n                            fontSize: 13,\n                            height: 20,\n                            padding: 0,\n                            margin: 0,\n                            letterSpacing: 0.5\n                        },\n                        toolbar: false,\n                        emptyRowsWhenPaging: false,\n                    }}\n                />\n            </div>\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}