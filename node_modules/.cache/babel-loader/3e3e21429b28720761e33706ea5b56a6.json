{"ast":null,"code":"import React,{Fragment}from'react';import{ChipField,Datagrid,Edit,EditButton,List,ReferenceField,ReferenceManyField,SimpleForm,SingleFieldList,TextField,TextInput,SearchInput,Filter,Pagination}from'react-admin';import{useMediaQuery}from'@material-ui/core';import{RoleListBox}from'./comp/rolelistbox';import'./comp/comp.css';import Box from\"@material-ui/core/Box\";import UserShow from\"./usershow3\";var ProfilPagination=function ProfilPagination(props){return React.createElement(Pagination,Object.assign({rowsPerPageOptions:[10,25,50,100]},props));};require('react-dom');window.React2=require('react');console.log(\"-----compare------\");console.log(window.React1===window.React2);var ProfilFilter=function ProfilFilter(props){return React.createElement(Filter,props,React.createElement(SearchInput,{source:\"surname\",alwaysOn:true}),React.createElement(TextInput,{label:\"Surname\",source:\"surname\",defaultValue:\"Surname\"}),React.createElement(TextInput,{label:\"Givenname\",source:\"givenname\",defaultValue:\"Givenname\"}),React.createElement(TextInput,{label:\"AddressID\",source:\"addressid\"}),React.createElement(TextInput,{label:\"Termconfiguration\",source:\"termconfiguration\",defaultValue:\"Termconfiguration\"}));};/**\n *\n * editing specified user.\n *\n * @param props\n * @returns {*}\n * @constructor\n */export var ProfilEdit=function ProfilEdit(props){return React.createElement(Edit,props,React.createElement(SimpleForm,null,React.createElement(\"div\",{style:{width:'100%'}},React.createElement(Box,{display:\"flex\",flexDirection:\"row\",p:1,m:1,bgcolor:\"background.paper\"},React.createElement(Box,{width:\"40%\",bgcolor:\"white.300\"},React.createElement(TextInput,{disabled:true,source:\"id\"}),React.createElement(TextField,{source:\"surname\"})),React.createElement(Box,{width:\"60%\",bgcolor:\"white.300\"},React.createElement(RoleListBox,{id_user:props.id}))))));};/**\n *\n * @param props\n * @returns {*}\n * @constructor\n */export var ProfilList=function ProfilList(props){return React.createElement(List,Object.assign({},props,{pagination:React.createElement(ProfilPagination,null),filters:React.createElement(ProfilFilter,null)}),React.createElement(Datagrid,{rowClick:\"expand\",expand:React.createElement(UserShow,null)},React.createElement(TextField,{label:\"AddressId\",source:\"id\"}),React.createElement(TextField,{source:\"anrede\"}),React.createElement(TextField,{source:\"surname\"}),React.createElement(TextField,{source:\"givenname\"}),React.createElement(TextField,{source:\"termconfiguration\"}),React.createElement(ReferenceManyField,{label:\"Roles\",reference:\"user_role\",target:\"id_user\"},React.createElement(SingleFieldList,{linkType:false},React.createElement(ReferenceField,{source:\"id_role\",reference:\"role\"},React.createElement(ChipField,{source:\"name\"})))),React.createElement(EditButton,null)));};","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/profil.js"],"names":["React","Fragment","ChipField","Datagrid","Edit","EditButton","List","ReferenceField","ReferenceManyField","SimpleForm","SingleFieldList","TextField","TextInput","SearchInput","Filter","Pagination","useMediaQuery","RoleListBox","Box","UserShow","ProfilPagination","props","require","window","React2","console","log","React1","ProfilFilter","ProfilEdit","width","id","ProfilList"],"mappings":"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","sourcesContent":["import React,{ Fragment }  from 'react';\n\nimport {\n    ChipField,\n    Datagrid,\n    Edit,\n    EditButton,\n    List,\n    ReferenceField,\n    ReferenceManyField,\n    SimpleForm,\n    SingleFieldList,\n    TextField,\n    TextInput,\n    SearchInput,\n    Filter,\n    Pagination\n} from 'react-admin';\nimport { useMediaQuery } from '@material-ui/core';\nimport {RoleListBox} from './comp/rolelistbox';\nimport './comp/comp.css'\nimport Box from \"@material-ui/core/Box\";\nimport UserShow from \"./usershow3\";\n\nconst ProfilPagination = props => <Pagination rowsPerPageOptions={[10, 25, 50, 100]} {...props} />;\n\nrequire('react-dom');\nwindow.React2 = require('react');\nconsole.log(\"-----compare------\")\nconsole.log(window.React1 === window.React2);\n\n\nconst ProfilFilter = (props) => (\n    <Filter {...props}>\n        <SearchInput source=\"surname\" alwaysOn />\n        <TextInput label=\"Surname\" source=\"surname\" defaultValue=\"Surname\" />\n        <TextInput label=\"Givenname\" source=\"givenname\" defaultValue=\"Givenname\" />\n        <TextInput label=\"AddressID\" source=\"addressid\" />\n        <TextInput label=\"Termconfiguration\" source=\"termconfiguration\" defaultValue=\"Termconfiguration\" />\n    </Filter>\n);\n/**\n *\n * editing specified user.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const ProfilEdit = (props) => (\n\n    <Edit  {...props}>\n        <SimpleForm >\n            <div style={{width: '100%'}} >\n                <Box display=\"flex\" flexDirection=\"row\" p={1} m={1} bgcolor=\"background.paper\" >\n                    <Box width=\"40%\" bgcolor=\"white.300\">\n                        <TextInput disabled source=\"id\"/>\n                        <TextField source=\"surname\"  />\n                    </Box>\n                    <Box width=\"60%\" bgcolor=\"white.300\">\n                        <RoleListBox id_user={props.id}/>\n                    </Box>\n                </Box>\n            </div>\n\n        </SimpleForm>\n    </Edit>\n);\n\n\n/**\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\n\nexport const ProfilList = (props) => (\n\n\n\n\n        <List {...props} pagination={<ProfilPagination/>} filters={ <ProfilFilter/> }>\n\n            <Datagrid rowClick=\"expand\" expand={<UserShow/>}>\n                <TextField label=\"AddressId\" source=\"id\"/>\n\n                <TextField source=\"anrede\"/>\n                <TextField source=\"surname\"/>\n                <TextField source=\"givenname\"/>\n                <TextField source=\"termconfiguration\"/>\n                <ReferenceManyField label='Roles' reference=\"user_role\" target=\"id_user\">\n                    <SingleFieldList linkType={false}>\n                        <ReferenceField source=\"id_role\" reference=\"role\">\n                            <ChipField source=\"name\"/>\n                        </ReferenceField>\n                    </SingleFieldList>\n                </ReferenceManyField>\n                <EditButton/>\n            </Datagrid>\n        </List>\n\n\n);\n"]},"metadata":{},"sourceType":"module"}