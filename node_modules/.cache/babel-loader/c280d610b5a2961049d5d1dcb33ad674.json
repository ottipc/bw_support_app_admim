{"ast":null,"code":"var _jsxFileName = \"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/usershow3.js\";\nimport * as React from 'react';\nimport { FC } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ReferenceField, useShowController, Datagrid, TextField, List, ReferenceManyField, SingleFieldList, ChipField } from 'react-admin';\nimport Paper from '@material-ui/core/Paper';\nimport { Tbl } from \"./comp/table\";\nconst useStyles = makeStyles({\n  container: {\n    minWidth: '35em',\n    marginLeft: '1em'\n  },\n  rightAlignedCell: {\n    textAlign: 'right'\n  },\n  boldCell: {\n    fontWeight: 'bold'\n  },\n  root: {\n    width: 1400,\n    margin: '10px'\n  },\n  spacer: {\n    height: 20\n  }\n});\n\nconst UserShow = props => {\n  const {\n    record\n  } = useShowController(props);\n  const classes = useStyles();\n  if (!record) return null;\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: \"userinfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, \"User Information\"))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    alignContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ReferenceField, {\n    reference: \"student\",\n    source: \"student\",\n    basePath: \"/student\",\n    record: record,\n    link: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"userdata\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, record.addressid, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }), record.anrede, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  }), record.surname, \" \", record.givenname, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Tbl, {\n    addressid: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 1\n    }\n  }))));\n};\n\nexport default UserShow;\n/*\n\n * <div className='info'>\n <Typography >\n termconfiguration  {record.termconfiguration}\n <br/>\n degreecode {record.degreecode}\n <br/>\n degree {record.degree}\n <br/>\n university {record.university}\n <br/>\n capr_nameeng {record.capr_nameeng}\n <br/>\n capr_degreeshort {record.capr_degreeshort}\n <br/>\n isnotifiable {record.isnotifiable}\n <br/>\n rwte_name  {record.rwte_name}\n <br/>\n term_type {record.term_type}\n <br/>\n </Typography>\n\n\n </div>\n */","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/usershow3.js"],"names":["React","FC","Card","CardContent","Grid","Typography","makeStyles","ReferenceField","useShowController","Datagrid","TextField","List","ReferenceManyField","SingleFieldList","ChipField","Paper","Tbl","useStyles","container","minWidth","marginLeft","rightAlignedCell","textAlign","boldCell","fontWeight","root","width","margin","spacer","height","UserShow","props","record","classes","addressid","anrede","surname","givenname","id"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {FC} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {ReferenceField, useShowController, Datagrid, TextField,List,  ReferenceManyField,\n    SingleFieldList,\n    ChipField,} from 'react-admin';\nimport Paper from '@material-ui/core/Paper';\nimport {Tbl} from \"./comp/table\";\n\n\nconst useStyles = makeStyles({\n    container: {minWidth: '35em', marginLeft: '1em'},\n    rightAlignedCell: {textAlign: 'right'},\n    boldCell: {fontWeight: 'bold'},\n    root: {width: 1400 , margin: '10px', },\n    spacer: {height: 20},\n});\n\n\nconst UserShow = (props) => {\n    const {record} = useShowController(props);\n    const classes = useStyles();\n\n    if (!record) return null;\n    return (\n        <Card className={classes.root}>\n            <CardContent className='userinfo'>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            User Information\n                        </Typography>\n                    </Grid>\n\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} container alignContent=\"flex-end\">\n                        <ReferenceField\n                            reference=\"student\"\n                            source=\"student\"\n                            basePath=\"/student\"\n                            record={record}\n                            link={false}\n                        >\n                            <Typography className='userdata'>\n                                 {record.addressid}\n                                <br/>\n                                {record.anrede}\n                                <br/>\n                                {record.surname} {record.givenname}\n                                <br/>\n\n                            </Typography>\n\n                        </ReferenceField>\n                    </Grid>\n                </Grid>\n<Paper>\n<Tbl addressid={props.id}/>\n</Paper>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default UserShow;\n\n\n/*\n\n * <div className='info'>\n <Typography >\n termconfiguration  {record.termconfiguration}\n <br/>\n degreecode {record.degreecode}\n <br/>\n degree {record.degree}\n <br/>\n university {record.university}\n <br/>\n capr_nameeng {record.capr_nameeng}\n <br/>\n capr_degreeshort {record.capr_degreeshort}\n <br/>\n isnotifiable {record.isnotifiable}\n <br/>\n rwte_name  {record.rwte_name}\n <br/>\n term_type {record.term_type}\n <br/>\n </Typography>\n\n\n </div>\n */\n\n"]},"metadata":{},"sourceType":"module"}