{"ast":null,"code":"import _classCallCheck from\"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import DualListBox from'react-dual-listbox';import'react-dual-listbox/lib/react-dual-listbox.css';import dataProvider from'../api/dataProvider';import apiService from'../api/apiService';import{createNotification}from'./Notification';import{NotificationContainer}from\"react-notifications\";import{confirmAlert}from'react-confirm-alert';import'react-confirm-alert/src/react-confirm-alert.css';/**\n * component for creating role-right-list\n *\n * @component\n *\n */export var RightListBox=/*#__PURE__*/function(_React$Component){_inherits(RightListBox,_React$Component);var _super=_createSuper(RightListBox);/**\n     * Construct right list box\n     * @param props\n     */function RightListBox(props){var _this;_classCallCheck(this,RightListBox);_this=_super.call(this,props);_this.onChange=function(selected){_this.setState({selected:selected});};_this.state={allRightsrow:[],allRights:[],roleRights:[],deletedRights:[],selected:[1],initialRights:[],relationobjects:[]};_this.handleClick=_this.updateRights.bind(_assertThisInitialized(_this));//this.props.hurensohn = \"was\";\nreturn _this;}/**\n     *\n     * invoke JUST ONCE onload or reload\n     *\n     * @function\n     *\n     */_createClass(RightListBox,[{key:\"componentDidMount\",value:function componentDidMount(){this.setAllRightsToState();this.getroleRightsToState();}/**\n     *\n     * send HTTP request to get Role Rights\n     * save roleRights to the state\n     *\n     *@function\n     *\n     */},{key:\"getroleRightsToState\",value:function getroleRightsToState(){var _this2=this;console.log(\"------- Set Role Rights ----------------\");var roleRights=[];var relations=[];this.fetchRightIdsForRole().then(function(response){return response;}).then(function(response){response.data.map(function(val){roleRights.push(val.id_right);relations.push(val);});console.log(roleRights);_this2.setState({selected:roleRights,initialRights:roleRights,relationobjects:relations});}).catch(function(err){console.log(err);});}/**\n     * function for getting the Right for a specified Role\n     *\n     * @returns {*}\n     * @function\n     */},{key:\"fetchRightIdsForRole\",value:function fetchRightIdsForRole(){return dataProvider.getList('role_right',{pagination:{page:1,perPage:50},sort:{field:'id',order:'ASC'},filter:{id_role:this.props.record.id}});}/**\n     *\n     *  send HTTP request to get All Rights\n     *  save AllRights to the state\n     *\n     *  @function\n     */},{key:\"setAllRightsToState\",value:function setAllRightsToState(){var _this3=this;console.log(\"------- Set All Rights ----------------\");apiService.fetchAllRights().then(function(response){return response;}).then(function(response){//  console.log(JSON.stringify(response.data));\n_this3.setState({allRightsraw:response.data,allRights:JSON.stringify(response.data)});}).catch(function(err){console.log(err);});}/**\n     *\n     * function for editing role-right-box\n     * add a new right to a role\n     * remove a right from a role\n     *\n     * @param e\n     * @function\n     */},{key:\"updateRights\",value:function updateRights(e){e.preventDefault();function createRoleRight(payload){dataProvider.create('role_right',{data:payload}).then(function(response){// success side effects go here\nconsole.log(response);}).catch(function(error){console.log(error);});}function deleteRoleRight(relationId){dataProvider.delete('role_right',{id:relationId}).then(function(response){// success side effects go here\nconsole.log(response);}).catch(function(error){console.log(error);});}if(this){console.log(\"------- Now we aggregating ----------------\");console.log(this.props);var initials=this.state.initialRights;var selected=this.state.selected;var currentRoleId=this.props.record.id;var realtions=this.state.relationobjects;var tocreate=[];var todelete=[];this.state.allRightsraw.map(function(val){console.log(\"------- VALUE  ----------------\");console.log(val.id);var rightId=val.id;if(initials.includes(rightId)&&!selected.includes(rightId)){console.log(\"------- Deleting .....  ----------------\");console.log(\"--------- REALTIONS -----------------\");var idToDelete=realtions.map(function(val){console.log(JSON.stringify(val));var definedrelation=JSON.parse(JSON.stringify(val));// eslint-disable-next-line eqeqeq\nif(definedrelation.id_role==currentRoleId&&definedrelation.id_right==rightId){//console.log(\"ID : \" + definedrelation.id);\n//console.log(rightId);\nconfirmAlert({title:'Confirm to submit',message:'Are you sure, you want to delete Right from Role.',buttons:[{label:'Yes',onClick:function onClick(){todelete.push(rightId);deleteRoleRight(definedrelation.id);createNotification(\"warning\",\"Right deleted\",\"Right for Role deleted\");return definedrelation.id;}},{label:'No',onClick:function onClick(){return console.log(\"-----NO-----\");}}]});}});}else if(!initials.includes(rightId)&&selected.includes(rightId)){console.log(\"------- Creating .....  ----------------\");tocreate.push(rightId);//only possible to post one entry\nvar payload=JSON.stringify({id_right:rightId,id_role:currentRoleId});console.log(payload);createRoleRight({\"id_right\":rightId,\"id_role\":currentRoleId});createNotification(\"success\",\"Right saved\",\"Right for Role persisted\");}});}}/**\n     * invoke whenever there is a change\n     *\n     * @param selected\n     * @function\n     */},{key:\"render\",/**\n     *\n     * Rendering Role Right box\n     *\n     * @returns {*}\n     */value:function render(){if(this.state.allRights.length&&this.state.allRights.length!=0){var rig=JSON.parse(this.state.allRights.replace(/id/g,\"value\").replace(/name/g,\"label\"));rig.map(function(val){delete val.created_at;delete val.updated_at;});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(DualListBox,{options:rig,selected:this.state.selected,onChange:this.onChange}),/*#__PURE__*/React.createElement(\"button\",{className:\"sabu\",onClick:this.updateRights.bind(this)},\"Save rights\"),/*#__PURE__*/React.createElement(NotificationContainer,null));}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(DualListBox,{options:this.state.selected,selected:this.state.selected}));}}]);return RightListBox;}(React.Component);export default RightListBox;","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/comp/rightlistbox.js"],"names":["React","DualListBox","dataProvider","apiService","createNotification","NotificationContainer","confirmAlert","RightListBox","props","onChange","selected","setState","state","allRightsrow","allRights","roleRights","deletedRights","initialRights","relationobjects","handleClick","updateRights","bind","setAllRightsToState","getroleRightsToState","console","log","relations","fetchRightIdsForRole","then","response","data","map","val","push","id_right","catch","err","getList","pagination","page","perPage","sort","field","order","filter","id_role","record","id","fetchAllRights","allRightsraw","JSON","stringify","e","preventDefault","createRoleRight","payload","create","error","deleteRoleRight","relationId","delete","initials","currentRoleId","realtions","tocreate","todelete","rightId","includes","idToDelete","definedrelation","parse","title","message","buttons","label","onClick","length","rig","replace","created_at","updated_at","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DualListBox from 'react-dual-listbox';\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\nimport dataProvider from '../api/dataProvider';\nimport apiService from '../api/apiService';\nimport {createNotification} from './Notification';\nimport {NotificationContainer} from \"react-notifications\";\nimport {confirmAlert} from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\n/**\n * component for creating role-right-list\n *\n * @component\n *\n */\nexport class RightListBox extends React.Component {\n    /**\n     * Construct right list box\n     * @param props\n     */\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            allRightsrow: [],\n            allRights: [],\n            roleRights: [],\n            deletedRights: [],\n            selected: [1],\n            initialRights: [],\n            relationobjects: []\n        };\n        this.handleClick = this.updateRights.bind(this);\n        //this.props.hurensohn = \"was\";\n    }\n\n    /**\n     *\n     * invoke JUST ONCE onload or reload\n     *\n     * @function\n     *\n     */\n    componentDidMount() {\n        this.setAllRightsToState();\n        this.getroleRightsToState();\n\n    }\n\n    /**\n     *\n     * send HTTP request to get Role Rights\n     * save roleRights to the state\n     *\n     *@function\n     *\n     */\n    getroleRightsToState() {\n        console.log(\"------- Set Role Rights ----------------\")\n        let roleRights = [];\n        let relations = [];\n        this.fetchRightIdsForRole().then(response => response)\n            .then(response => {\n                response.data.map(function (val) {\n                    roleRights.push(val.id_right);\n                    relations.push(val);\n                });\n                console.log(roleRights);\n                this.setState({\n                    selected: roleRights,\n                    initialRights: roleRights,\n                    relationobjects: relations\n                })\n            }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    /**\n     * function for getting the Right for a specified Role\n     *\n     * @returns {*}\n     * @function\n     */\n    fetchRightIdsForRole() {\n        return dataProvider.getList('role_right', {\n            pagination: {\n                page: 1,\n                perPage: 50\n            },\n            sort: {\n                field: 'id',\n                order: 'ASC'\n            },\n            filter: {\n                id_role: this.props.record.id\n            },\n        });\n    }\n\n\n    /**\n     *\n     *  send HTTP request to get All Rights\n     *  save AllRights to the state\n     *\n     *  @function\n     */\n    setAllRightsToState() {\n        console.log(\"------- Set All Rights ----------------\")\n        apiService.fetchAllRights().then(response => response)\n            .then(response => {\n                //  console.log(JSON.stringify(response.data));\n                this.setState({\n                    allRightsraw: response.data,\n                    allRights: JSON.stringify(response.data)\n                })\n            }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    /**\n     *\n     * function for editing role-right-box\n     * add a new right to a role\n     * remove a right from a role\n     *\n     * @param e\n     * @function\n     */\n    updateRights(e) {\n\n        e.preventDefault();\n        function createRoleRight(payload) {\n            dataProvider\n                .create('role_right', {data: payload})\n                .then(response => {\n                    // success side effects go here\n                    console.log(response);\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        }\n\n\n        function deleteRoleRight(relationId) {\n\n            dataProvider\n                .delete('role_right', {id: relationId})\n                .then(response => {\n                    // success side effects go here\n                    console.log(response);\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        }\n        if (this) {\n            console.log(\"------- Now we aggregating ----------------\");\n            console.log(this.props);\n\n            let initials = this.state.initialRights;\n            let selected = this.state.selected;\n            let currentRoleId = this.props.record.id;\n            let realtions = this.state.relationobjects;\n\n            var tocreate = [];\n            var todelete = [];\n\n            this.state.allRightsraw.map(function (val) {\n\n                console.log(\"------- VALUE  ----------------\");\n                console.log(val.id);\n                let rightId = val.id;\n                if (initials.includes(rightId) && !selected.includes(rightId)) {\n                    console.log(\"------- Deleting .....  ----------------\");\n\n                    console.log(\"--------- REALTIONS -----------------\");\n\n                    let idToDelete = realtions.map(function (val) {\n                        console.log(JSON.stringify(val));\n                        let definedrelation = JSON.parse(JSON.stringify(val));\n                        // eslint-disable-next-line eqeqeq\n                        if (definedrelation.id_role == currentRoleId && definedrelation.id_right == rightId) {\n                            //console.log(\"ID : \" + definedrelation.id);\n                            //console.log(rightId);\n                            confirmAlert({\n                                title: 'Confirm to submit',\n                                message: 'Are you sure, you want to delete Right from Role.',\n                                buttons: [\n                                    {\n                                        label: 'Yes',\n                                        onClick: () => {\n                                            todelete.push(rightId);\n                                            deleteRoleRight(definedrelation.id);\n                                            createNotification(\"warning\", \"Right deleted\", \"Right for Role deleted\");\n                                            return definedrelation.id;\n                                        }\n                                    },\n                                    {\n                                        label: 'No',\n                                        onClick: () => console.log(\"-----NO-----\")\n                                    }\n                                ]\n                            });\n                        }\n                    });\n\n                } else if (!initials.includes(rightId) && selected.includes(rightId)) {\n                    console.log(\"------- Creating .....  ----------------\");\n\n                    tocreate.push(rightId);\n                    //only possible to post one entry\n                    let payload = JSON.stringify({id_right: rightId, id_role: currentRoleId});\n                    console.log(payload);\n                    createRoleRight({\"id_right\": rightId, \"id_role\": currentRoleId});\n                    createNotification(\"success\", \"Right saved\", \"Right for Role persisted\");\n                }\n            });\n\n\n        }\n    }\n\n\n    /**\n     * invoke whenever there is a change\n     *\n     * @param selected\n     * @function\n     */\n    onChange = (selected) => {\n        this.setState({\n            selected\n        });\n    };\n\n    /**\n     *\n     * Rendering Role Right box\n     *\n     * @returns {*}\n     */\n    render() {\n        if (this.state.allRights.length && this.state.allRights.length != 0) {\n            var rig = JSON.parse(this.state.allRights.replace(/id/g, \"value\").replace(/name/g, \"label\"));\n            rig.map(function (val) {\n\n                delete val.created_at;\n                delete val.updated_at;\n            });\n\n            return (<div><DualListBox options={rig} selected={this.state.selected} onChange={this.onChange}/>\n                <button className=\"sabu\" onClick={this.updateRights.bind(this)}>Save rights\n                </button>\n                <NotificationContainer/>\n            </div>);\n\n        }\n        return (<div><DualListBox options={this.state.selected} selected={this.state.selected}/></div>);\n    }\n}\n\nexport default RightListBox;\n"]},"metadata":{},"sourceType":"module"}