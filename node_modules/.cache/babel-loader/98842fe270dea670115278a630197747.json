{"ast":null,"code":"import _classCallCheck from\"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'react-dual-listbox/lib/react-dual-listbox.css';import Chip from'@material-ui/core/Chip';import LinkAnyFieldButton from\"./linkAnyFieldButton\";import apiService from'../api/apiService';function updateState(text){this.setState({text:text});}/**\n *\n * Component for showing  RIGHTS in  user role box\n * be shown in user.js\n *\n * @component\n *\n */export var UserRightBox=/*#__PURE__*/function(_React$Component){_inherits(UserRightBox,_React$Component);var _super=_createSuper(UserRightBox);/**\n     *\n     * CONSTRUCT USER-RIGHT BOX\n     *\n     * @param props\n     * @constructor\n     *\n     */function UserRightBox(props){var _this;_classCallCheck(this,UserRightBox);_this=_super.call(this,props);//  console.log(\"*** CONSTRUCT USER RIGHT BOX ***\");\n// Don't call this.setState() here!\n_this.state={userroles:[],roleRights:[],rightObjects:[]};_this.setRightOfUser=_this.setRightOfUser.bind(_assertThisInitialized(_this));updateState=updateState.bind(_assertThisInitialized(_this));return _this;}_createClass(UserRightBox,[{key:\"updateState\",value:function updateState(){this.setState({shown:false});}/**\n     *\n     *invoke WHENEVER THERE IS AN UPDATE IN USER-RIGHT BOX\n     *\n     * @param prevProps\n     * @param prevState\n     */},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){if(JSON.stringify(prevProps.selected)!==JSON.stringify(this.props.selected)){this.setRightOfUser();}}/**\n     *\n     *  invoke JUST ONCE onload or reload\n     *\n     *  @function\n     *\n     */},{key:\"componentDidMount\",value:function componentDidMount(){this.setRightOfUser();}/**\n     *\n     * invoke whenever the component receives new props.\n     *\n     * @param props\n     * @param state\n     * @returns {null|{cachedSomeProp: *}}\n     */},{key:\"setRightOfUser\",/**\n     *   SET RIGHT TO USER\n     *\n     * send HTTP request to get User Roles\n     * save UserRoles to the state\n     *\n     * @function\n     *\n     */value:function setRightOfUser(){var self=this;var currentselected=this.props.selected;if(this){apiService.fetchRightIdsForRoles(currentselected).then(function(roleRightResponse){var roleRights=roleRightResponse==[]?[]:roleRightResponse.data;self.setState({roleRights:roleRights});return roleRights;// pass the data as promise to next then block\n}).then(function(userRightResponse){var roleRightIds=[];userRightResponse.map(function(value,index){roleRightIds.push(value.id_right);});/** SETTING THE NEW RIGHTS IN STATE **/apiService.fetchRightObjectsFOrId(roleRightIds).then(function(rightResponse){var rightObjects=rightResponse==[]?rightResponse:rightResponse.data;self.setState({rightObjects:rightObjects});});}).catch(function(err){console.log(err);});}}/**\n     * RENDERING USER RIGHT BOX\n     *\n     * @returns {null|*}\n     */},{key:\"render\",value:function render(){if(this){var rights=this.state.rightObjects;return/*#__PURE__*/React.createElement(\"div\",{className:\"diusri\"},/*#__PURE__*/React.createElement(\"ul\",null,rights.map(function(value,index){var url=\"/right/\"+value.id;return/*#__PURE__*/React.createElement(LinkAnyFieldButton,{to:url,key:value.id},/*#__PURE__*/React.createElement(Chip,{label:value.name}));})));}return null;}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){return null;return{cachedSomeProp:props// ... other derived state properties\n};}}]);return UserRightBox;}(React.Component);export default UserRightBox;","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/comp/userrightlistbox.js"],"names":["React","Chip","LinkAnyFieldButton","apiService","updateState","text","setState","UserRightBox","props","state","userroles","roleRights","rightObjects","setRightOfUser","bind","shown","prevProps","prevState","JSON","stringify","selected","self","currentselected","fetchRightIdsForRoles","then","roleRightResponse","data","userRightResponse","roleRightIds","map","value","index","push","id_right","fetchRightObjectsFOrId","rightResponse","catch","err","console","log","rights","url","id","name","cachedSomeProp","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\nimport Chip from '@material-ui/core/Chip';\nimport LinkAnyFieldButton from \"./linkAnyFieldButton\";\nimport apiService from '../api/apiService';\n\nfunction updateState(text) {\n    this.setState({text})\n}\n\n\n/**\n *\n * Component for showing  RIGHTS in  user role box\n * be shown in user.js\n *\n * @component\n *\n */\nexport class UserRightBox extends React.Component {\n\n    /**\n     *\n     * CONSTRUCT USER-RIGHT BOX\n     *\n     * @param props\n     * @constructor\n     *\n     */\n    constructor(props) {\n        super(props);\n        //  console.log(\"*** CONSTRUCT USER RIGHT BOX ***\");\n        // Don't call this.setState() here!\n        this.state = {\n            userroles: [],\n            roleRights: [],\n            rightObjects: []\n        };\n        this.setRightOfUser = this.setRightOfUser.bind(this);\n        updateState = updateState.bind(this)\n    }\n\n    updateState() {\n        this.setState({shown: false});\n    }\n\n    /**\n     *\n     *invoke WHENEVER THERE IS AN UPDATE IN USER-RIGHT BOX\n     *\n     * @param prevProps\n     * @param prevState\n     */\n    componentDidUpdate(prevProps, prevState) {\n\n        if (JSON.stringify(prevProps.selected) !== JSON.stringify(this.props.selected)) {\n            this.setRightOfUser();\n        }\n\n    }\n\n    /**\n     *\n     *  invoke JUST ONCE onload or reload\n     *\n     *  @function\n     *\n     */\n    componentDidMount() {\n        this.setRightOfUser();\n    }\n\n    /**\n     *\n     * invoke whenever the component receives new props.\n     *\n     * @param props\n     * @param state\n     * @returns {null|{cachedSomeProp: *}}\n     */\n    static getDerivedStateFromProps(props, state) {\n\n\n        return null;\n        return {\n            cachedSomeProp: props,\n            // ... other derived state properties\n        };\n    }\n\n\n    /**\n     *   SET RIGHT TO USER\n     *\n     * send HTTP request to get User Roles\n     * save UserRoles to the state\n     *\n     * @function\n     *\n     */\n    setRightOfUser() {\n        var self = this;\n        let currentselected = this.props.selected;\n        if (this) {\n            apiService.fetchRightIdsForRoles(currentselected).then(function (roleRightResponse) {\n                let roleRights = roleRightResponse == [] ? [] : roleRightResponse.data;\n                self.setState({\n                    roleRights: roleRights\n                });\n\n                return roleRights; // pass the data as promise to next then block\n            }).then(function (userRightResponse) {\n                let roleRightIds = [];\n                userRightResponse.map((value, index) => {\n                    roleRightIds.push(value.id_right);\n                });\n                /** SETTING THE NEW RIGHTS IN STATE **/\n                apiService.fetchRightObjectsFOrId(roleRightIds).then(function (rightResponse) {\n\n                    let rightObjects = rightResponse == [] ? rightResponse : rightResponse.data;\n                    self.setState({\n                        rightObjects: rightObjects\n                    })\n                })\n            }).catch(err => {\n                console.log(err);\n            });\n        }\n    }\n\n    /**\n     * RENDERING USER RIGHT BOX\n     *\n     * @returns {null|*}\n     */\n    render() {\n\n        if (this) {\n            const rights = this.state.rightObjects;\n            return (\n                <div className=\"diusri\" >\n                    <ul>\n                        {rights.map((value, index) => {\n                            let url = \"/right/\" + value.id;\n\n                            return <LinkAnyFieldButton to={url} key={value.id}>\n                                <Chip label={value.name}></Chip>\n                            </LinkAnyFieldButton>\n                        })\n                        }\n                    </ul>\n                </div>\n            )\n        }\n        return null;\n    }\n}\n\nexport default UserRightBox;\n"]},"metadata":{},"sourceType":"module"}