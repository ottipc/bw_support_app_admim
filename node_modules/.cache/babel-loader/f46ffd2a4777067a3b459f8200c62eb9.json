{"ast":null,"code":"var _jsxFileName = \"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/comp/tableaccount.js\";\nimport React from 'react';\nimport { FC } from 'react';\nimport classnames from 'classnames';\nimport Chip from '@material-ui/core/Chip';\nimport LinkAnyFieldButton from \"./linkAnyFieldButton\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Link, useTranslate, useQueryWithStore, ReferenceField, Datagrid } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport apiService from \"../api/apiService\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport dataProvider from '../api/dataProvider';\nimport { useShowController } from 'react-admin';\nimport axios from 'axios';\nimport { API_URL } from '../api/dataProvider';\nimport { DataManager, Query } from \"@syncfusion/ej2-data\";\nimport { element } from \"prop-types\";\nimport UserShow from \"../usershow3\";\nvar exmatreason = null;\nvar degreecode = null;\nvar degree = null;\nvar university = null;\nvar capr_nameeng = null;\nvar capr_degreeshort = null;\nvar isnotifiable = null;\nvar immatdate = null;\nvar exmatdate = null;\nvar rwte_name_data = null;\nvar rwte_name = null;\nvar term_type_data = null;\nvar term_type = null;\nvar i = null;\nvar j = null;\nvar k = null;\nvar username = null;\nvar email = null;\nvar status = null;\nvar personid = null;\nvar expire = null;\nexport class TblAccount extends React.Component {\n  constructor(props) {\n    super(props);\n    let aid = props.addressid;\n    console.log(\"addressid  \" + aid);\n    this.state = {\n      sdata: []\n    };\n    console.log(\"Missgeburten Call !!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n    axios.get(API_URL + '/accounts?addressid=eq.' + aid).then(res => {\n      const sdata = res.data;\n      this.setState({\n        sdata: res.data\n      });\n      console.log(\"studie data\");\n      console.log(sdata);\n      username = sdata.map(function (sdata) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, sdata.username);\n      });\n      email = sdata.map(function (sdata) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, sdata.email);\n      });\n      status = sdata.map(function (sdata) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, sdata.status);\n      });\n      personid = sdata.map(function (sdata) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, sdata.personid);\n      });\n      expire = sdata.map(function (sdata) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, sdata.expire);\n      });\n    });\n    /*\n     // get the Data from csph\n      axios.get(API_URL + '/studie?select=csph(csph_rwte_name,csph_type)&addressid=eq.' + aid)\n          .then(response => {\n               const cdata = response.data;\n              this.setState({cdata: response.data});\n              console.log(\"csph data\")\n              console.log(cdata)\n              rwte_name_data = cdata.map(function (cdata) {\n                  return cdata.csph\n              });\n              term_type_data = cdata.map(function (cdata) {\n                  return cdata.csph\n              });\n              for (i = 0; i < rwte_name_data.length; i++) {\n                  for (j = 0; j < rwte_name_data[i].length; j++) {\n                       rwte_name = rwte_name_data[i][j].csph_rwte_name\n                       term_type = term_type_data[i][j].csph_type\n                      console.log(\"**********************\")\n                      console.log(\"term_type  \" + [i]+ \" \"+[j])\n                      console.log(term_type)\n                      console.log(rwte_name)\n                  }\n              }\n            });*/\n  }\n\n  render() {\n    return React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Benutzername\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Email\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Status\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Person\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Abgelaufen\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, username), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, email), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, status), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, personid), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, expire))));\n  }\n\n}","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/comp/tableaccount.js"],"names":["React","FC","classnames","Chip","LinkAnyFieldButton","Table","TableBody","TableCell","TableHead","TableRow","Paper","Link","useTranslate","useQueryWithStore","ReferenceField","Datagrid","makeStyles","apiService","Grid","Typography","CardContent","dataProvider","useShowController","axios","API_URL","DataManager","Query","element","UserShow","exmatreason","degreecode","degree","university","capr_nameeng","capr_degreeshort","isnotifiable","immatdate","exmatdate","rwte_name_data","rwte_name","term_type_data","term_type","i","j","k","username","email","status","personid","expire","TblAccount","Component","constructor","props","aid","addressid","console","log","state","sdata","get","then","res","data","setState","map","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {FC} from 'react';\nimport classnames from 'classnames';\nimport Chip from '@material-ui/core/Chip';\nimport LinkAnyFieldButton from \"./linkAnyFieldButton\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {Link, useTranslate, useQueryWithStore, ReferenceField, Datagrid} from 'react-admin';\nimport {makeStyles} from '@material-ui/core/styles';\nimport apiService from \"../api/apiService\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport dataProvider from '../api/dataProvider';\nimport {useShowController} from 'react-admin';\nimport axios from 'axios';\nimport {API_URL} from '../api/dataProvider'\nimport {DataManager, Query} from \"@syncfusion/ej2-data\";\nimport {element} from \"prop-types\";\nimport UserShow from \"../usershow3\";\n\n\nvar exmatreason = null;\nvar degreecode = null;\nvar degree = null;\nvar university = null;\nvar capr_nameeng = null;\nvar capr_degreeshort = null;\nvar isnotifiable = null;\nvar immatdate = null;\nvar exmatdate = null;\nvar rwte_name_data = null;\nvar rwte_name = null;\nvar term_type_data = null;\nvar term_type = null;\nvar i = null;\nvar j = null;\nvar k = null;\n\nvar username = null;\nvar email = null;\nvar status = null;\nvar personid = null;\nvar expire= null;\n\nexport class TblAccount extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let aid = props.addressid;\n        console.log(\"addressid  \" + aid);\n        this.state = {\n            sdata: []\n\n        };\n        console.log(\"Missgeburten Call !!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\n        axios.get(API_URL + '/accounts?addressid=eq.' + aid)\n            .then(res => {\n\n                const sdata = res.data;\n                this.setState({sdata: res.data});\n                console.log(\"studie data\");\n                console.log(sdata);\n\n\n     username = sdata.map(function (sdata) {\n         return <li>{sdata.username}</li>\n     });\n     email = sdata.map(function (sdata) {\n         return <li>{sdata.email}</li>\n     });\n     status = sdata.map(function (sdata) {\n         return <li>{sdata.status}</li>\n     });\n     personid = sdata.map(function (sdata) {\n         return <li>{sdata.personid}</li>\n     });\n     expire = sdata.map(function (sdata) {\n         return <li>{sdata.expire}</li>\n     });\n\n\n            });\n\n      /*\n       // get the Data from csph\n\n       axios.get(API_URL + '/studie?select=csph(csph_rwte_name,csph_type)&addressid=eq.' + aid)\n            .then(response => {\n\n                const cdata = response.data;\n                this.setState({cdata: response.data});\n                console.log(\"csph data\")\n                console.log(cdata)\n                rwte_name_data = cdata.map(function (cdata) {\n                    return cdata.csph\n                });\n                term_type_data = cdata.map(function (cdata) {\n                    return cdata.csph\n                });\n                for (i = 0; i < rwte_name_data.length; i++) {\n                    for (j = 0; j < rwte_name_data[i].length; j++) {\n\n                        rwte_name = rwte_name_data[i][j].csph_rwte_name\n\n                        term_type = term_type_data[i][j].csph_type\n                        console.log(\"**********************\")\n                        console.log(\"term_type  \" + [i]+ \" \"+[j])\n                        console.log(term_type)\n                        console.log(rwte_name)\n                    }\n                }\n\n\n            });*/\n\n    };\n\n\n    render() {\n        return (\n\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            Benutzername\n                        </TableCell>\n                        <TableCell>\n                            Email\n                        </TableCell>\n                        <TableCell>\n                            Status\n                        </TableCell>\n                        <TableCell>\n                            Person\n                        </TableCell>\n                        <TableCell>\n                            Abgelaufen\n                        </TableCell>\n\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n\n                        <TableCell>\n                            {username}\n                        </TableCell>\n                        <TableCell>\n                            {email}\n                        </TableCell>\n                        <TableCell>\n                            {status}\n                        </TableCell>\n                        <TableCell>\n                            {personid}\n                        </TableCell>\n                        <TableCell>\n                            {expire}\n                        </TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n\n\n        )\n    }\n}\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}