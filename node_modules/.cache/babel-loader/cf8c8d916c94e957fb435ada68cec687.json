{"ast":null,"code":"var _jsxFileName = \"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/role.js\";\nimport React, { Fragment } from 'react';\nimport { ChipField, Create, Datagrid, NumberInput, Edit, EditButton, List, ReferenceField, ReferenceManyField, SimpleForm, SingleFieldList, TextField, TextInput } from 'react-admin';\nimport { RightListBox } from \"./comp/rightlistbox\"; // in src/posts.js\n\n/**\n *\n * creating a new role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\nexport const RoleCreate = props => React.createElement(Create, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}), React.createElement(SimpleForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(TextInput, {\n  source: \"name\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n})));\n/**\n *\n * showing list of the role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\nexport const RoleList = props => React.createElement(Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(List, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}), React.createElement(Datagrid, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(TextField, {\n  source: \"id\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}), React.createElement(TextField, {\n  source: \"name\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}), React.createElement(ReferenceManyField, {\n  label: \"Right\",\n  reference: \"role_right\",\n  target: \"id_role\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(SingleFieldList, {\n  linkType: false,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, React.createElement(ReferenceField, {\n  source: \"id_right\",\n  reference: \"right\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, React.createElement(ChipField, {\n  source: \"name\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n})))), React.createElement(EditButton, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}))));\n/**\n *\n * editing a specified role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\nexport const RoleEdit = props => React.createElement(Edit, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}), React.createElement(SimpleForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}, React.createElement(TextInput, {\n  source: \"name\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}), React.createElement(RightListBox, {\n  id_role: props.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n})));","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/role.js"],"names":["React","Fragment","ChipField","Create","Datagrid","NumberInput","Edit","EditButton","List","ReferenceField","ReferenceManyField","SimpleForm","SingleFieldList","TextField","TextInput","RightListBox","RoleCreate","props","RoleList","RoleEdit","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAAgC,OAAhC;AACA,SAAQC,SAAR,EAAmBC,MAAnB,EAA2BC,QAA3B,EAAqCC,WAArC,EAAkDC,IAAlD,EAAwDC,UAAxD,EAAoEC,IAApE,EAA0EC,cAA1E,EAA0FC,kBAA1F,EAA8GC,UAA9G,EAA0HC,eAA1H,EAA2IC,SAA3I,EAAsJC,SAAtJ,QAAsK,aAAtK;AACA,SAAQC,YAAR,QAA2B,qBAA3B,C,CAEA;;AAEA;;;;;;;;;AAQA,OAAO,MAAMC,UAAU,GAAGC,KAAK,IAC3B,oBAAC,MAAD,oBAAYA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,SAAD;AAAW,EAAA,MAAM,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADG;AAWP;;;;;;;;;AAQA,OAAO,MAAMC,QAAQ,GAAID,KAAD,IACpB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,IAAD,oBAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,SAAD;AAAW,EAAA,MAAM,EAAC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,SAAD;AAAW,EAAA,MAAM,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI,oBAAC,kBAAD;AAAoB,EAAA,KAAK,EAAC,OAA1B;AAAkC,EAAA,SAAS,EAAC,YAA5C;AAAyD,EAAA,MAAM,EAAC,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,eAAD;AAAiB,EAAA,QAAQ,EAAE,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAC,UAAvB;AAAkC,EAAA,SAAS,EAAC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,SAAD;AAAW,EAAA,MAAM,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADJ,CAHJ,EAUI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAVJ,CAFJ,CADJ,CADG;AAoBP;;;;;;;;;AAQA,OAAO,MAAME,QAAQ,GAAGF,KAAK,IACzB,oBAAC,IAAD,oBAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,SAAD;AAAW,EAAA,MAAM,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,YAAD;AAAc,EAAA,OAAO,EAAEA,KAAK,CAACG,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,CADJ,CADG","sourcesContent":["import React,{ Fragment }  from 'react';\nimport {ChipField, Create, Datagrid, NumberInput, Edit, EditButton, List, ReferenceField, ReferenceManyField, SimpleForm, SingleFieldList, TextField, TextInput} from 'react-admin';\nimport {RightListBox} from \"./comp/rightlistbox\";\n\n// in src/posts.js\n\n/**\n *\n * creating a new role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const RoleCreate = props => (\n    <Create {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" />\n\n        </SimpleForm>\n    </Create>\n\n);\n\n\n/**\n *\n * showing list of the role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const RoleList = (props) => (\n    <Fragment>\n        <List {...props}>\n\n            <Datagrid>\n                <TextField source=\"id\" />\n                <TextField source=\"name\" />\n                <ReferenceManyField label=\"Right\" reference=\"role_right\" target=\"id_role\">\n                    <SingleFieldList linkType={false}>\n                        <ReferenceField source=\"id_right\" reference=\"right\">\n                            <ChipField source=\"name\" />\n                        </ReferenceField>\n                    </SingleFieldList>\n                </ReferenceManyField>\n                <EditButton />\n            </Datagrid>\n        </List>\n    </Fragment>\n);\n\n/**\n *\n * editing a specified role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const RoleEdit = props => (\n    <Edit {...props}>\n        <SimpleForm >\n            <TextInput source=\"name\" />\n            <RightListBox id_role={props.id}/>\n        </SimpleForm>\n    </Edit>\n\n);\n\n\n\n"]},"metadata":{},"sourceType":"module"}