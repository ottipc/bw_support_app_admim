{"ast":null,"code":"var _jsxFileName = \"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/comp/table.js\";\nimport React from 'react';\nimport { FC } from 'react';\nimport classnames from 'classnames';\nimport Chip from '@material-ui/core/Chip';\nimport LinkAnyFieldButton from \"./linkAnyFieldButton\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Link, useTranslate, useQueryWithStore, ReferenceField, Datagrid } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport apiService from \"../api/apiService\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport dataProvider from '../api/dataProvider';\nimport { useShowController } from 'react-admin';\nimport axios from 'axios';\nimport { API_URL } from '../api/dataProvider';\nimport { DataManager, Query } from \"@syncfusion/ej2-data\";\nimport { element } from \"prop-types\";\nimport UserShow from \"../usershow3\";\nimport { withStyles } from '@material-ui/core/styles';\nvar exmatreason = null;\nvar degreecode = null;\nvar degree = null;\nvar university = null;\nvar capr_nameeng = null;\nvar capr_degreeshort = null;\nvar isnotifiable = null;\nvar immatdate = null;\nvar exmatdate = null;\nvar rwte_name_data = null;\nvar rwte_name = null;\nvar term_type_data = null;\nvar term_type = null;\nvar i = null;\nvar j = null;\nvar k = null;\nvar test = null;\nexport var username = null;\nexport var email = null;\nexport var status = null;\nexport var personid = null;\nexport var expire = null;\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nexport class Tbl extends React.Component {\n  constructor(props) {\n    super(props);\n    let aid = props.addressid;\n    console.log(\"addressid  \" + aid);\n    this.state = {\n      sdata: [],\n      adata: []\n    };\n    axios.get(API_URL + '/studies?addressid=eq.' + aid).then(res => {\n      const sdata = res.data;\n      this.setState({\n        sdata: res.data\n      });\n      console.log(\"studie data\");\n      console.log(sdata);\n      exmatreason = sdata.map(function (sdata) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, sdata.exmatreason);\n      });\n      degreecode = sdata.map(function (sdata) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, sdata.degreecode);\n      });\n      degree = sdata.map(function (sdata) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, sdata.degree);\n      });\n      university = sdata.map(function (sdata) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, sdata.university);\n      });\n      capr_nameeng = sdata.map(function (sdata) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, sdata.capr_nameeng);\n      });\n      capr_degreeshort = sdata.map(function (sdata) {\n        return sdata.capr_degreeshort;\n      });\n      isnotifiable = sdata.map(function (sdata) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, sdata.isnotifiable);\n      });\n      exmatreason = sdata.map(function (sdata) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \" \", sdata.exmatreason);\n      });\n      exmatreason = sdata.map(function (sdata) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \" \", sdata.exmatreason, \" \");\n      });\n      immatdate = sdata.map(function (sdata) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \" \", sdata.immatdate);\n      });\n      exmatdate = sdata.map(function (sdata) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \" \", sdata.exmatdate, \" \");\n      });\n    });\n    axios.get(API_URL + '/accounts?addressid=eq.' + aid).then(response => {\n      const adata = response.data;\n      this.setState({\n        adata: response.data\n      });\n      console.log(\"accounts data\");\n      console.log(adata);\n      username = adata.map(function (adata) {\n        return adata.username;\n      });\n      email = adata.map(function (adata) {\n        return adata.email;\n      });\n      status = adata.map(function (adata) {\n        return adata.status;\n      });\n      personid = adata.map(function (adata) {\n        return adata.personid;\n      });\n      expire = adata.map(function (adata) {\n        return adata.expire;\n      });\n    });\n    /*\n     // get the Data from csph\n      axios.get(API_URL + '/studie?select=csph(csph_rwte_name,csph_type)&addressid=eq.' + aid)\n          .then(response => {\n               const cdata = response.data;\n              this.setState({cdata: response.data});\n              console.log(\"csph data\")\n              console.log(cdata)\n              rwte_name_data = cdata.map(function (cdata) {\n                  return cdata.csph\n              });\n              term_type_data = cdata.map(function (cdata) {\n                  return cdata.csph\n              });\n              for (i = 0; i < rwte_name_data.length; i++) {\n                  for (j = 0; j < rwte_name_data[i].length; j++) {\n                       rwte_name = rwte_name_data[i][j].csph_rwte_name\n                       term_type = term_type_data[i][j].csph_type\n                      console.log(\"**********************\")\n                      console.log(\"term_type  \" + [i]+ \" \"+[j])\n                      console.log(term_type)\n                      console.log(rwte_name)\n                  }\n              }\n            });*/\n  }\n\n  render() {\n    return React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(StyledTableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"degreecode\"), React.createElement(StyledTableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"degree\"), React.createElement(StyledTableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"university\"), React.createElement(StyledTableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"immatdate\"), React.createElement(StyledTableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"exmatdate\"), React.createElement(StyledTableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"exmatreason\"), React.createElement(StyledTableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"capr_nameeng\"), React.createElement(StyledTableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"capr_degreeshort\"), React.createElement(StyledTableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"isnotifiable\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(StyledTableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, degreecode), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, degree), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, university), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, immatdate), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, exmatdate), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, exmatreason), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, capr_nameeng), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, capr_degreeshort), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, isnotifiable))));\n  }\n\n}","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/comp/table.js"],"names":["React","FC","classnames","Chip","LinkAnyFieldButton","Table","TableBody","TableCell","TableHead","TableRow","Paper","Link","useTranslate","useQueryWithStore","ReferenceField","Datagrid","makeStyles","apiService","Grid","Typography","CardContent","dataProvider","useShowController","axios","API_URL","DataManager","Query","element","UserShow","withStyles","exmatreason","degreecode","degree","university","capr_nameeng","capr_degreeshort","isnotifiable","immatdate","exmatdate","rwte_name_data","rwte_name","term_type_data","term_type","i","j","k","test","username","email","status","personid","expire","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","action","hover","Tbl","Component","constructor","props","aid","addressid","console","log","state","sdata","adata","get","then","res","data","setState","map","response","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {FC} from 'react';\nimport classnames from 'classnames';\nimport Chip from '@material-ui/core/Chip';\nimport LinkAnyFieldButton from \"./linkAnyFieldButton\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {Link, useTranslate, useQueryWithStore, ReferenceField, Datagrid} from 'react-admin';\nimport {makeStyles} from '@material-ui/core/styles';\nimport apiService from \"../api/apiService\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport dataProvider from '../api/dataProvider';\nimport {useShowController} from 'react-admin';\nimport axios from 'axios';\nimport {API_URL} from '../api/dataProvider'\nimport {DataManager, Query} from \"@syncfusion/ej2-data\";\nimport {element} from \"prop-types\";\nimport UserShow from \"../usershow3\";\nimport {withStyles} from '@material-ui/core/styles';\n\nvar exmatreason = null;\nvar degreecode = null;\nvar degree = null;\nvar university = null;\nvar capr_nameeng = null;\nvar capr_degreeshort = null;\nvar isnotifiable = null;\nvar immatdate = null;\nvar exmatdate = null;\nvar rwte_name_data = null;\nvar rwte_name = null;\nvar term_type_data = null;\nvar term_type = null;\nvar i = null;\nvar j = null;\nvar k = null;\nvar test = null;\nexport var username = null;\nexport var email = null;\nexport var status = null;\nexport var personid = null;\nexport var expire = null;\n\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\n\nexport class Tbl extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let aid = props.addressid;\n        console.log(\"addressid  \" + aid)\n        this.state = {\n            sdata: [],\n            adata: []\n\n        };\n\n        axios.get(API_URL + '/studies?addressid=eq.' + aid)\n\n            .then(res => {\n\n                const sdata = res.data;\n                this.setState({sdata: res.data});\n                console.log(\"studie data\")\n                console.log(sdata)\n\n\n                exmatreason = sdata.map(function (sdata) {\n                    return <li>{sdata.exmatreason}</li>\n                });\n                degreecode = sdata.map(function (sdata) {\n                    return <li>{sdata.degreecode}</li>\n                });\n                degree = sdata.map(function (sdata) {\n                    return <li>{sdata.degree}</li>\n                });\n                university = sdata.map(function (sdata) {\n                    return <li>{sdata.university}</li>\n                });\n                capr_nameeng = sdata.map(function (sdata) {\n                    return <li>{sdata.capr_nameeng}</li>\n                });\n                capr_degreeshort = sdata.map(function (sdata) {\n                    return sdata.capr_degreeshort\n                });\n                isnotifiable = sdata.map(function (sdata) {\n\n                    return <li>{sdata.isnotifiable}</li>\n                });\n                exmatreason = sdata.map(function (sdata) {\n                    return <li> {sdata.exmatreason}</li>\n                });\n                exmatreason = sdata.map(function (sdata) {\n                    return <li> {sdata.exmatreason} </li>\n                });\n                immatdate = sdata.map(function (sdata) {\n                    return <li> {sdata.immatdate}</li>\n                });\n\n                exmatdate = sdata.map(function (sdata) {\n                    return <li> {sdata.exmatdate} </li>\n                });\n\n            });\n\n\n        axios.get(API_URL + '/accounts?addressid=eq.' + aid)\n            .then(response => {\n\n                const adata = response.data;\n                this.setState({adata: response.data});\n                console.log(\"accounts data\");\n                console.log(adata);\n\n\n                username = adata.map(function (adata) {\n                    return (adata.username)\n                });\n                email = adata.map(function (adata) {\n                    return (adata.email)\n                });\n                status = adata.map(function (adata) {\n                    return (adata.status)\n                });\n                personid = adata.map(function (adata) {\n                    return (adata.personid)\n                });\n                expire = adata.map(function (adata) {\n                    return (adata.expire)\n                });\n\n\n            });\n\n\n        /*\n         // get the Data from csph\n\n         axios.get(API_URL + '/studie?select=csph(csph_rwte_name,csph_type)&addressid=eq.' + aid)\n              .then(response => {\n\n                  const cdata = response.data;\n                  this.setState({cdata: response.data});\n                  console.log(\"csph data\")\n                  console.log(cdata)\n                  rwte_name_data = cdata.map(function (cdata) {\n                      return cdata.csph\n                  });\n                  term_type_data = cdata.map(function (cdata) {\n                      return cdata.csph\n                  });\n                  for (i = 0; i < rwte_name_data.length; i++) {\n                      for (j = 0; j < rwte_name_data[i].length; j++) {\n\n                          rwte_name = rwte_name_data[i][j].csph_rwte_name\n\n                          term_type = term_type_data[i][j].csph_type\n                          console.log(\"**********************\")\n                          console.log(\"term_type  \" + [i]+ \" \"+[j])\n                          console.log(term_type)\n                          console.log(rwte_name)\n                      }\n                  }\n\n\n              });*/\n\n    };\n\n\n    render() {\n        return (\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <StyledTableCell>\n                            degreecode\n                        </StyledTableCell>\n                        <StyledTableCell>\n                            degree\n                        </StyledTableCell>\n                        <StyledTableCell>\n                            university\n                        </StyledTableCell>\n                        <StyledTableCell>\n                            immatdate\n                        </StyledTableCell>\n                        <StyledTableCell>\n                            exmatdate\n                        </StyledTableCell>\n                        <StyledTableCell>\n                            exmatreason\n                        </StyledTableCell>\n                        <StyledTableCell>\n                            capr_nameeng\n                        </StyledTableCell>\n                        <StyledTableCell>\n                            capr_degreeshort\n                        </StyledTableCell>\n                        <StyledTableCell>\n                            isnotifiable\n                        </StyledTableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <StyledTableRow>\n                        <TableCell>\n                            {degreecode}\n                        </TableCell>\n                        <TableCell>\n                            {degree}\n                        </TableCell>\n                        <TableCell>\n                            {university}\n                        </TableCell>\n                        <TableCell>\n                            {immatdate}\n                        </TableCell>\n                        <TableCell>\n                            {exmatdate}\n                        </TableCell>\n                        <TableCell>\n                            {exmatreason}\n                        </TableCell>\n                        <TableCell>\n                            {capr_nameeng}\n                        </TableCell>\n                        <TableCell>\n                            {capr_degreeshort}\n                        </TableCell>\n                        <TableCell>\n                            {isnotifiable}\n                        </TableCell>\n                    </StyledTableRow>\n                </TableBody>\n            </Table>\n\n\n        )\n    }\n}\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}