{"ast":null,"code":"import _defineProperty from\"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Button,Drawer}from'@material-ui/core';import{ChipField,Create,Datagrid,Edit,EditButton,EmailField,List,ReferenceField,ReferenceManyField,SimpleForm,SingleFieldList,TextField,TextInput,Show,SimpleShowLayout,BooleanField,BooleanInput}from'react-admin';import{RoleListBox}from'./comp/rolelistbox';import'./comp/comp.css';import Box from\"@material-ui/core/Box\";import Grid from'@material-ui/core/Grid';import{useTranslate}from'react-admin';require('react-dom');window.React2=require('react');console.log(\"-----compare------\");console.log(window.React1===window.React2);/**\n *\n * function for checking if all required fields are filled\n *\n * @function\n *\n * @param values\n */var validateUserCreation=function validateUserCreation(values){//alert(\"Validating....\")\nvar errors={};if(!values.name){errors.name=['The name is required'];}if(!values.email){errors.email=['The Email is required'];}//if (!validateEmail(values.email)) {\n//    errors.email = ['The Email is wrong format'];\n//}\nreturn errors;};/**\n *\n *  creating a new user.\n *\n * @param props\n * @returns {*}\n * @constructor\n */export var UserCreate=function UserCreate(props){return/*#__PURE__*/React.createElement(Create,props,/*#__PURE__*/React.createElement(SimpleForm,{validate:validateUserCreation},/*#__PURE__*/React.createElement(TextInput,{required:true,source:\"name\"}),/*#__PURE__*/React.createElement(TextInput,{required:true,label:\"Email\",source:\"email\",type:\"email\"}),/*#__PURE__*/React.createElement(BooleanInput,{source:\"activated\"})));};/**\n *\n * editing specified user.\n *\n * @param props\n * @returns {*}\n * @constructor\n */ /*export const UserEdit = (props) => (\n\n    <Edit  {...props}>\n        <SimpleForm >\n            <div style={{width: '100%'}} >\n                <Box display=\"flex\" flexDirection=\"row\" p={1} m={1} bgcolor=\"background.paper\" >\n                    <Box width=\"40%\" bgcolor=\"white.300\">\n                        <TextInput disabled source=\"id\"/>\n                        <TextInput source=\"name\"  />\n                        <TextInput label=\"Email\" source=\"email\" type=\"email\"/>\n                        <BooleanInput source=\"activated\"/>\n                    </Box>\n                    <Box width=\"60%\" bgcolor=\"white.300\">\n                        <RoleListBox id_user={props.id}/>\n                    </Box>\n                </Box>\n            </div>\n\n        </SimpleForm>\n    </Edit>\n);*/ /**\n *\n *  creating a new user in Popup dialog\n *\n * @param props\n * @returns {*}\n * @constructor\n */export default function CreateDrawer(props){var _React$useState=React.useState({bottom:false,right:false}),_React$useState2=_slicedToArray(_React$useState,2),state=_React$useState2[0],setState=_React$useState2[1];var toggleDrawer=function toggleDrawer(anchor,open){return function(event){if(event.type==='keydown'&&(event.key==='Tab'||event.key==='Shift')){return;}setState(_objectSpread(_objectSpread({},state),{},_defineProperty({},anchor,open)));};};return/*#__PURE__*/React.createElement(\"div\",null,['right','bottom'].map(function(anchor){return/*#__PURE__*/React.createElement(React.Fragment,{key:anchor},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",\"data-class\":\"MuiChip-label\",\"data-animation\":\"true\",\"data-toggle\":\"tooltip\",title:\"Klick to Quick Create user\",onClick:toggleDrawer(anchor,true)},anchor),/*#__PURE__*/React.createElement(Drawer,{anchor:anchor,open:state[anchor],onClose:toggleDrawer(anchor,false)},/*#__PURE__*/React.createElement(UserCreate,props)));}));}/**\n *\n * @param props\n * @returns {*}\n * @constructor\n */ /*export const UserList = (props) => (\n\n    <React.Fragment>\n        {CreateDrawer(props)}\n        <List {...props}\n              basePath={\"/user\"}\n              resource={\"user\"}\n        >\n\n            <Datagrid>\n                <TextField source=\"id\"/>\n                <TextField source=\"name\"/>\n                <EmailField source=\"email\"/>\n                <BooleanField source=\"activated\"/>\n                <ReferenceManyField label='Roles' reference=\"user_role\" target=\"id_user\">\n                    <SingleFieldList linkType={false}>\n                        <ReferenceField source=\"id_role\" reference=\"role\">\n                            <ChipField source=\"name\"/>\n                        </ReferenceField>\n                    </SingleFieldList>\n                </ReferenceManyField>\n                <EditButton/>\n            </Datagrid>\n        </List>\n    </React.Fragment>\n\n);*/export var UserShow=function UserShow(props){return/*#__PURE__*/React.createElement(Show,props,/*#__PURE__*/React.createElement(SimpleShowLayout,null,/*#__PURE__*/React.createElement(TextField,{disabled:true,source:\"id\"}),/*#__PURE__*/React.createElement(TextField,{source:\"name\"}),/*#__PURE__*/React.createElement(TextField,{source:\"email\"}),/*#__PURE__*/React.createElement(BooleanField,{source:\"activated\"})));};","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/user.js"],"names":["React","Button","Drawer","ChipField","Create","Datagrid","Edit","EditButton","EmailField","List","ReferenceField","ReferenceManyField","SimpleForm","SingleFieldList","TextField","TextInput","Show","SimpleShowLayout","BooleanField","BooleanInput","RoleListBox","Box","Grid","useTranslate","require","window","React2","console","log","React1","validateUserCreation","values","errors","name","email","UserCreate","props","CreateDrawer","useState","bottom","right","state","setState","toggleDrawer","anchor","open","event","type","key","map","UserShow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button, Drawer} from '@material-ui/core';\nimport {\n    ChipField,\n    Create,\n    Datagrid,\n    Edit,\n    EditButton,\n    EmailField,\n    List,\n    ReferenceField,\n    ReferenceManyField,\n    SimpleForm,\n    SingleFieldList,\n    TextField,\n    TextInput,\n    Show,\n    SimpleShowLayout,\n    BooleanField,\n    BooleanInput,\n} from 'react-admin';\nimport {RoleListBox} from './comp/rolelistbox';\nimport './comp/comp.css'\nimport Box from \"@material-ui/core/Box\";\nimport Grid from '@material-ui/core/Grid';\nimport { useTranslate } from 'react-admin';\n\n\n\nrequire('react-dom');\nwindow.React2 = require('react');\nconsole.log(\"-----compare------\")\nconsole.log(window.React1 === window.React2);\n/**\n *\n * function for checking if all required fields are filled\n *\n * @function\n *\n * @param values\n */\nconst validateUserCreation = (values) => {\n    //alert(\"Validating....\")\n    const errors = {};\n    if (!values.name) {\n        errors.name = ['The name is required'];\n    }\n\n    if (!values.email) {\n        errors.email = ['The Email is required'];\n    }\n    //if (!validateEmail(values.email)) {\n    //    errors.email = ['The Email is wrong format'];\n    //}\n    return errors\n};\n\n\n/**\n *\n *  creating a new user.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const UserCreate = props => (\n    <Create {...props}>\n        <SimpleForm validate={validateUserCreation}>\n            <TextInput required source=\"name\"/>\n            <TextInput required label=\"Email\" source=\"email\" type=\"email\"/>\n            <BooleanInput source=\"activated\"/>\n        </SimpleForm>\n    </Create>\n\n);\n\n\n/**\n *\n * editing specified user.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n/*export const UserEdit = (props) => (\n\n    <Edit  {...props}>\n        <SimpleForm >\n            <div style={{width: '100%'}} >\n                <Box display=\"flex\" flexDirection=\"row\" p={1} m={1} bgcolor=\"background.paper\" >\n                    <Box width=\"40%\" bgcolor=\"white.300\">\n                        <TextInput disabled source=\"id\"/>\n                        <TextInput source=\"name\"  />\n                        <TextInput label=\"Email\" source=\"email\" type=\"email\"/>\n                        <BooleanInput source=\"activated\"/>\n                    </Box>\n                    <Box width=\"60%\" bgcolor=\"white.300\">\n                        <RoleListBox id_user={props.id}/>\n                    </Box>\n                </Box>\n            </div>\n\n        </SimpleForm>\n    </Edit>\n);*/\n\n\n/**\n *\n *  creating a new user in Popup dialog\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nexport default function CreateDrawer(props) {\n\n    const [state, setState] = React.useState({\n        bottom: false,\n        right: false,\n    });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setState({...state, [anchor]: open});\n    };\n\n    return (\n        <div>\n            {['right', 'bottom'].map((anchor) => (\n                <React.Fragment key={anchor}>\n                    <Button variant=\"contained\" color=\"primary\" data-class=\"MuiChip-label\" data-animation=\"true\"\n                            data-toggle=\"tooltip\" title=\"Klick to Quick Create user\"\n                            onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n                    <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n                        <UserCreate {...props}/>\n                    </Drawer>\n                </React.Fragment>\n            ))}\n        </div>\n    );\n}\n\n/**\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\n\n/*export const UserList = (props) => (\n\n    <React.Fragment>\n        {CreateDrawer(props)}\n        <List {...props}\n              basePath={\"/user\"}\n              resource={\"user\"}\n        >\n\n            <Datagrid>\n                <TextField source=\"id\"/>\n                <TextField source=\"name\"/>\n                <EmailField source=\"email\"/>\n                <BooleanField source=\"activated\"/>\n                <ReferenceManyField label='Roles' reference=\"user_role\" target=\"id_user\">\n                    <SingleFieldList linkType={false}>\n                        <ReferenceField source=\"id_role\" reference=\"role\">\n                            <ChipField source=\"name\"/>\n                        </ReferenceField>\n                    </SingleFieldList>\n                </ReferenceManyField>\n                <EditButton/>\n            </Datagrid>\n        </List>\n    </React.Fragment>\n\n);*/\n\n\n\nexport const UserShow = (props) => (\n    <Show {...props}>\n        <SimpleShowLayout>\n            <TextField disabled source=\"id\"/>\n            <TextField source=\"name\"/>\n            <TextField source=\"email\"/>\n            <BooleanField source=\"activated\"/>\n        </SimpleShowLayout>\n    </Show>\n\n);\n\n\n\n"]},"metadata":{},"sourceType":"module"}