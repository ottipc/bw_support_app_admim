{"ast":null,"code":"import{NotificationManager}from'react-notifications';import'react-notifications/lib/notifications.css';/**\n *\n *  Display a Notification\n *  in te React App as Popup Dialog\n * @param type\n * @param title\n * @param message\n */export var createNotification=function createNotification(type,title,message){console.log(\"^^^^^^^^^^ CREATING NOTIFICATION TYPE ^^^^^^^^^^^^^^^^^^\");console.log(type);switch(type){case'info':console.log(\"^^^^^^^^^^ SHOW INFO ^^^^^^^^^^^^^^^^^^\");NotificationManager.info(message,title,1000);break;case\"success\":console.log(\"^^^^^^^^^^ SHOW SUCCESS ^^^^^^^^^^^^^^^^^^\");NotificationManager.success(message,title,1000);break;case'warning':console.log(\"^^^^^^^^^^ CSOW WARING ^^^^^^^^^^^^^^^^^^\");NotificationManager.warning(message,title,1000);break;case'error':NotificationManager.error(message,title,1000);break;}};","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/comp/Notification.js"],"names":["NotificationManager","createNotification","type","title","message","console","log","info","success","warning","error"],"mappings":"AACA,OAASA,mBAAT,KAAmC,qBAAnC,CACA,MAAO,2CAAP,CAEA;;;;;;;GAWC,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,IAAD,CAAOC,KAAP,CAAcC,OAAd,CAA0B,CACzDC,OAAO,CAACC,GAAR,CAAY,0DAAZ,EACAD,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EACI,OAAQA,IAAR,EAEI,IAAK,MAAL,CACIG,OAAO,CAACC,GAAR,CAAY,yCAAZ,EACAN,mBAAmB,CAACO,IAApB,CAAyBH,OAAzB,CAAkCD,KAAlC,CAAyC,IAAzC,EAEA,MACJ,IAAK,SAAL,CACIE,OAAO,CAACC,GAAR,CAAY,4CAAZ,EACAN,mBAAmB,CAACQ,OAApB,CAA4BJ,OAA5B,CAAqCD,KAArC,CAA4C,IAA5C,EACA,MACJ,IAAK,SAAL,CACIE,OAAO,CAACC,GAAR,CAAY,2CAAZ,EACAN,mBAAmB,CAACS,OAApB,CAA4BL,OAA5B,CAAqCD,KAArC,CAA4C,IAA5C,EACA,MACJ,IAAK,OAAL,CACIH,mBAAmB,CAACU,KAApB,CAA0BN,OAA1B,CAAmCD,KAAnC,CAA0C,IAA1C,EACA,MAjBR,CAmBP,CAtBO","sourcesContent":["\nimport { NotificationManager} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\n/**\n *\n *  Display a Notification\n *  in te React App as Popup Dialog\n * @param type\n * @param title\n * @param message\n */\n\n\n\n export const createNotification = (type, title, message) => {\n    console.log(\"^^^^^^^^^^ CREATING NOTIFICATION TYPE ^^^^^^^^^^^^^^^^^^\");\n    console.log(type);\n        switch (type) {\n\n            case 'info':\n                console.log(\"^^^^^^^^^^ SHOW INFO ^^^^^^^^^^^^^^^^^^\");\n                NotificationManager.info(message, title, 1000);\n\n                break;\n            case \"success\":\n                console.log(\"^^^^^^^^^^ SHOW SUCCESS ^^^^^^^^^^^^^^^^^^\");\n                NotificationManager.success(message, title, 1000);\n                break;\n            case 'warning':\n                console.log(\"^^^^^^^^^^ CSOW WARING ^^^^^^^^^^^^^^^^^^\");\n                NotificationManager.warning(message, title, 1000);\n                break;\n            case 'error':\n                NotificationManager.error(message, title, 1000);\n                break;\n        }\n};\n\n\n"]},"metadata":{},"sourceType":"module"}