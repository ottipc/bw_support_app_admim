{"ast":null,"code":"var _jsxFileName = \"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/lang/myUserMenu.js\";\nimport React, { forwardRef } from 'react';\nimport { UserMenu, useLocale, useSetLocale, useTranslate } from 'react-admin';\nimport { makeStyles, MenuItem, ListItemIcon } from '@material-ui/core';\nimport { Language } from '@material-ui/icons';\nconst useStyles = makeStyles(theme => ({\n  menuItem: {\n    color: theme.palette.text.secondary\n  },\n  icon: {\n    minWidth: theme.spacing(5)\n  }\n}));\nconst SwitchLanguage = forwardRef((props, ref) => {\n  const locale = useLocale();\n  const setLocale = useSetLocale();\n  const classes = useStyles();\n  const translate = useTranslate();\n  return React.createElement(MenuItem, {\n    ref: ref,\n    className: classes.menuItem,\n    onClick: () => {\n      setLocale(locale === 'en' ? 'de' : 'en');\n      props.onClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    className: classes.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Language, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), translate('pos.language'));\n});\n\nconst MyUserMenu = props => React.createElement(UserMenu, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}), React.createElement(SwitchLanguage, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}));\n\nexport default MyUserMenu;","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/lang/myUserMenu.js"],"names":["React","forwardRef","UserMenu","useLocale","useSetLocale","useTranslate","makeStyles","MenuItem","ListItemIcon","Language","useStyles","theme","menuItem","color","palette","text","secondary","icon","minWidth","spacing","SwitchLanguage","props","ref","locale","setLocale","classes","translate","onClick","MyUserMenu"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAAUC,QAAV,EAAoBC,SAApB,EAA+BC,YAA/B,EAA6CC,YAA7C,QAAiE,aAAjE;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,YAA/B,QAAmD,mBAAnD;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAGA,MAAMC,SAAS,GAAGJ,UAAU,CAACK,KAAK,KAAK;AACnCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAEF,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmBC;AADpB,GADyB;AAInCC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,QAAQ,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AAAZ;AAJ6B,CAAL,CAAN,CAA5B;AAOA,MAAMC,cAAc,GAAGnB,UAAU,CAAC,CAACoB,KAAD,EAAQC,GAAR,KAAgB;AAC9C,QAAMC,MAAM,GAAGpB,SAAS,EAAxB;AACA,QAAMqB,SAAS,GAAGpB,YAAY,EAA9B;AACA,QAAMqB,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAMgB,SAAS,GAAGrB,YAAY,EAA9B;AAEA,SACI,oBAAC,QAAD;AACI,IAAA,GAAG,EAAEiB,GADT;AAEI,IAAA,SAAS,EAAEG,OAAO,CAACb,QAFvB;AAGI,IAAA,OAAO,EAAE,MAAM;AACXY,MAAAA,SAAS,CAACD,MAAM,KAAK,IAAX,GAAkB,IAAlB,GAAyB,IAA1B,CAAT;AACAF,MAAAA,KAAK,CAACM,OAAN;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEF,OAAO,CAACR,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATJ,EAYGS,SAAS,CAAC,cAAD,CAZZ,CADJ;AAgBH,CAtBgC,CAAjC;;AAwBA,MAAME,UAAU,GAAGP,KAAK,IACpB,oBAAC,QAAD,oBAAcA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ;;AAMA,eAAeO,UAAf","sourcesContent":["import React, { forwardRef } from 'react';\nimport {  UserMenu, useLocale, useSetLocale, useTranslate } from 'react-admin';\nimport { makeStyles, MenuItem, ListItemIcon } from '@material-ui/core';\nimport { Language } from '@material-ui/icons';\n\n\nconst useStyles = makeStyles(theme => ({\n    menuItem: {\n        color: theme.palette.text.secondary,\n    },\n    icon: { minWidth: theme.spacing(5) },\n}));\n\nconst SwitchLanguage = forwardRef((props, ref) => {\n    const locale = useLocale();\n    const setLocale = useSetLocale();\n    const classes = useStyles();\n    const translate = useTranslate();\n\n    return (\n        <MenuItem\n            ref={ref}\n            className={classes.menuItem}\n            onClick={() => {\n                setLocale(locale === 'en' ? 'de' : 'en');\n                props.onClick();\n            }}\n        >\n\n            <ListItemIcon className={classes.icon}>\n                <Language />\n            </ListItemIcon>\n          {translate('pos.language')}\n        </MenuItem>\n    );\n});\n\nconst MyUserMenu = props => (\n    <UserMenu {...props}>\n        <SwitchLanguage />\n    </UserMenu>\n);\n\nexport default MyUserMenu;\n"]},"metadata":{},"sourceType":"module"}