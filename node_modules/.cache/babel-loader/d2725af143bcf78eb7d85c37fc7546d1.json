{"ast":null,"code":"var _jsxFileName = \"/home/codi/Entwicklung/workspace-webstorm/question_app_admin/src/questions.js\";\nimport React, { cloneElement, useState } from 'react';\nimport { ChipField, Datagrid, Create, Edit, EditButton, List, ReferenceField, ReferenceManyField, SimpleForm, SingleFieldList, TextField, TextInput, SearchInput, Filter, Pagination, Button } from 'react-admin';\nimport { RoleListBox } from './comp/rolelistbox';\nimport './comp/comp.css';\nimport Box from \"@material-ui/core/Box\";\nimport UserShow from \"./usershow3\";\nimport { MyEdit } from \"./myEdit\";\n\nconst QuestionPagination = props => React.createElement(Pagination, Object.assign({\n  rowsPerPageOptions: [10, 25, 50, 100]\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}));\n\nconst QuestionFilter = props => React.createElement(Filter, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}), React.createElement(SearchInput, {\n  source: \"name\",\n  alwaysOn: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}), React.createElement(SearchInput, {\n  source: \"detail\",\n  alwaysOn: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}));\n/**\n *\n * editing specified user.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\n\nconst WrappedSimpleForm = ({\n  save,\n  ...rest\n}) => {\n  const mySave = () => {\n    alert(\"Alles cscheisse\");\n  };\n\n  return React.createElement(SimpleForm, Object.assign({\n    save: mySave\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};\n\nexport const QuestionCreate = props => React.createElement(Create, Object.assign({\n  title: \"Create a Question\"\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}), React.createElement(SimpleForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, React.createElement(TextInput, {\n  source: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}), React.createElement(TextInput, {\n  source: \"detail\",\n  options: {\n    multiLine: true\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}), React.createElement(TextInput, {\n  source: \"language\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n})));\nexport const QuestionEdit = props => React.createElement(MyEdit, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}), React.createElement(WrappedSimpleForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  style: {\n    width: '100%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}, React.createElement(Box, {\n  display: \"flex\",\n  flexDirection: \"row\",\n  p: 1,\n  m: 1,\n  bgcolor: \"background.paper\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, React.createElement(Box, {\n  width: \"40%\",\n  bgcolor: \"white.300\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, React.createElement(TextInput, {\n  label: \"ID\",\n  disabled: true,\n  source: \"id\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}), React.createElement(TextInput, {\n  label: \"Text\",\n  source: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}), React.createElement(TextInput, {\n  label: \"Sprache\",\n  disabled: true,\n  source: \"language\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}), React.createElement(TextInput, {\n  label: \"Detail\",\n  source: \"detail\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}))))));\n/**\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\nexport const QuestionList = props => React.createElement(List, Object.assign({}, props, {\n  pagination: React.createElement(QuestionPagination, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }),\n  filters: React.createElement(QuestionFilter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }),\n  sort: {\n    field: 'id',\n    order: 'DESC'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}), React.createElement(Datagrid, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}, React.createElement(TextField, {\n  label: \"ID\",\n  source: \"id\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}), React.createElement(TextField, {\n  source: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103\n  },\n  __self: this\n}), React.createElement(TextField, {\n  source: \"language\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}), React.createElement(TextField, {\n  source: \"detail\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}), React.createElement(EditButton, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106\n  },\n  __self: this\n})));","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/question_app_admin/src/questions.js"],"names":["React","cloneElement","useState","ChipField","Datagrid","Create","Edit","EditButton","List","ReferenceField","ReferenceManyField","SimpleForm","SingleFieldList","TextField","TextInput","SearchInput","Filter","Pagination","Button","RoleListBox","Box","UserShow","MyEdit","QuestionPagination","props","QuestionFilter","WrappedSimpleForm","save","rest","mySave","alert","QuestionCreate","multiLine","QuestionEdit","width","QuestionList","field","order"],"mappings":"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","sourcesContent":["import React, {cloneElement, useState} from 'react';\nimport {\n    ChipField,\n    Datagrid,\n    Create,\n    Edit,\n    EditButton,\n    List,\n    ReferenceField,\n    ReferenceManyField,\n    SimpleForm,\n    SingleFieldList,\n    TextField,\n    TextInput,\n    SearchInput,\n    Filter,\n    Pagination, Button\n\n} from 'react-admin';\nimport {RoleListBox} from './comp/rolelistbox';\nimport './comp/comp.css'\nimport Box from \"@material-ui/core/Box\";\nimport UserShow from \"./usershow3\";\nimport {MyEdit} from \"./myEdit\";\n\n\n\n\nconst QuestionPagination = props => <Pagination rowsPerPageOptions={[10, 25, 50, 100]} {...props} />;\n\nconst QuestionFilter = (props) => (\n    <Filter {...props}>\n\n        <SearchInput source=\"name\" alwaysOn/>\n        <SearchInput source=\"detail\" alwaysOn/>\n    </Filter>\n);\n/**\n *\n * editing specified user.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\nconst WrappedSimpleForm = ({save, ...rest}) => {\n    const mySave = () => {alert(\"Alles cscheisse\")};\n    return (<SimpleForm save={mySave} {...rest} />);\n}\n\n\nexport const QuestionCreate = (props) => (\n    <Create title=\"Create a Question\" {...props}>\n        <SimpleForm>\n            <TextInput source=\"text\" />\n            <TextInput source=\"detail\" options={{ multiLine: true }} />\n            <TextInput source=\"language\" />\n        </SimpleForm>\n    </Create>\n);\n\n\n\nexport const QuestionEdit = (props) => (\n\n    <MyEdit  {...props}>\n        <WrappedSimpleForm>\n            <div style={{width: '100%'}}>\n                <Box display=\"flex\" flexDirection=\"row\" p={1} m={1} bgcolor=\"background.paper\">\n                    <Box width=\"40%\" bgcolor=\"white.300\">\n                        <TextInput label=\"ID\" disabled source=\"id\"/>\n                        <TextInput label=\"Text\" source=\"text\"/>\n                        <TextInput label=\"Sprache\" disabled source=\"language\"/>\n                        <TextInput label=\"Detail\"  source=\"detail\"/>\n                    </Box>\n                </Box>\n            </div>\n        </WrappedSimpleForm>\n    </MyEdit>\n);\n\n\n/**\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\n\nexport const QuestionList = (props) => (\n\n\n        <List\n            {...props}\n            pagination={<QuestionPagination/>}\n            filters={ <QuestionFilter /> }\n            sort={{field: 'id', order: 'DESC'}}>\n\n            <Datagrid>\n                <TextField label=\"ID\" source=\"id\"/>\n                <TextField source=\"text\"/>\n                <TextField source=\"language\"/>\n                <TextField source=\"detail\"/>\n                <EditButton/>\n            </Datagrid>\n        </List>\n\n\n    );\n\n"]},"metadata":{},"sourceType":"module"}