{"ast":null,"code":"var _jsxFileName = \"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/user.js\";\nimport React from 'react';\nimport { Button, Drawer } from '@material-ui/core';\nimport { ChipField, Create, Datagrid, Edit, EditButton, EmailField, List, ReferenceField, ReferenceManyField, SimpleForm, SingleFieldList, TextField, TextInput, Show, SimpleShowLayout, BooleanField, BooleanInput } from 'react-admin';\nimport { RoleListBox } from './comp/rolelistbox';\nimport './comp/comp.css';\nimport Box from \"@material-ui/core/Box\";\nimport Grid from '@material-ui/core/Grid';\nimport { useTranslate } from 'react-admin';\n\nrequire('react-dom');\n\nwindow.React2 = require('react');\nconsole.log(\"-----compare------\");\nconsole.log(window.React1 === window.React2);\n/**\n *\n * function for checking if all required fields are filled\n *\n * @function\n *\n * @param values\n */\n\nconst validateUserCreation = values => {\n  //alert(\"Validating....\")\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = ['The name is required'];\n  }\n\n  if (!values.email) {\n    errors.email = ['The Email is required'];\n  } //if (!validateEmail(values.email)) {\n  //    errors.email = ['The Email is wrong format'];\n  //}\n\n\n  return errors;\n};\n/**\n *\n *  creating a new user.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\n\nexport const UserCreate = props => /*#__PURE__*/React.createElement(Create, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(SimpleForm, {\n  validate: validateUserCreation,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(TextInput, {\n  required: true,\n  source: \"name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(TextInput, {\n  required: true,\n  label: \"Email\",\n  source: \"email\",\n  type: \"email\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(BooleanInput, {\n  source: \"activated\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 13\n  }\n})));\n/**\n *\n * editing specified user.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\n/*export const UserEdit = (props) => (\n\n    <Edit  {...props}>\n        <SimpleForm >\n            <div style={{width: '100%'}} >\n                <Box display=\"flex\" flexDirection=\"row\" p={1} m={1} bgcolor=\"background.paper\" >\n                    <Box width=\"40%\" bgcolor=\"white.300\">\n                        <TextInput disabled source=\"id\"/>\n                        <TextInput source=\"name\"  />\n                        <TextInput label=\"Email\" source=\"email\" type=\"email\"/>\n                        <BooleanInput source=\"activated\"/>\n                    </Box>\n                    <Box width=\"60%\" bgcolor=\"white.300\">\n                        <RoleListBox id_user={props.id}/>\n                    </Box>\n                </Box>\n            </div>\n\n        </SimpleForm>\n    </Edit>\n);*/\n\n/**\n *\n *  creating a new user in Popup dialog\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\nexport default function CreateDrawer(props) {\n  const [state, setState] = React.useState({\n    bottom: false,\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, ['right', 'bottom'].map(anchor => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: anchor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    \"data-class\": \"MuiChip-label\",\n    \"data-animation\": \"true\",\n    \"data-toggle\": \"tooltip\",\n    title: \"Klick to Quick Create user\",\n    onClick: toggleDrawer(anchor, true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, anchor), /*#__PURE__*/React.createElement(Drawer, {\n    anchor: anchor,\n    open: state[anchor],\n    onClose: toggleDrawer(anchor, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(UserCreate, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }))))));\n}\n/**\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\n/*export const UserList = (props) => (\n\n    <React.Fragment>\n        {CreateDrawer(props)}\n        <List {...props}\n              basePath={\"/user\"}\n              resource={\"user\"}\n        >\n\n            <Datagrid>\n                <TextField source=\"id\"/>\n                <TextField source=\"name\"/>\n                <EmailField source=\"email\"/>\n                <BooleanField source=\"activated\"/>\n                <ReferenceManyField label='Roles' reference=\"user_role\" target=\"id_user\">\n                    <SingleFieldList linkType={false}>\n                        <ReferenceField source=\"id_role\" reference=\"role\">\n                            <ChipField source=\"name\"/>\n                        </ReferenceField>\n                    </SingleFieldList>\n                </ReferenceManyField>\n                <EditButton/>\n            </Datagrid>\n        </List>\n    </React.Fragment>\n\n);*/\n\nexport const UserShow = props => /*#__PURE__*/React.createElement(Show, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(SimpleShowLayout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(TextField, {\n  disabled: true,\n  source: \"id\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(TextField, {\n  source: \"name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(TextField, {\n  source: \"email\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(BooleanField, {\n  source: \"activated\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 13\n  }\n})));","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/user.js"],"names":["React","Button","Drawer","ChipField","Create","Datagrid","Edit","EditButton","EmailField","List","ReferenceField","ReferenceManyField","SimpleForm","SingleFieldList","TextField","TextInput","Show","SimpleShowLayout","BooleanField","BooleanInput","RoleListBox","Box","Grid","useTranslate","require","window","React2","console","log","React1","validateUserCreation","values","errors","name","email","UserCreate","props","CreateDrawer","state","setState","useState","bottom","right","toggleDrawer","anchor","open","event","type","key","map","UserShow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button, Drawer} from '@material-ui/core';\nimport {\n    ChipField,\n    Create,\n    Datagrid,\n    Edit,\n    EditButton,\n    EmailField,\n    List,\n    ReferenceField,\n    ReferenceManyField,\n    SimpleForm,\n    SingleFieldList,\n    TextField,\n    TextInput,\n    Show,\n    SimpleShowLayout,\n    BooleanField,\n    BooleanInput,\n} from 'react-admin';\nimport {RoleListBox} from './comp/rolelistbox';\nimport './comp/comp.css'\nimport Box from \"@material-ui/core/Box\";\nimport Grid from '@material-ui/core/Grid';\nimport { useTranslate } from 'react-admin';\n\n\n\nrequire('react-dom');\nwindow.React2 = require('react');\nconsole.log(\"-----compare------\")\nconsole.log(window.React1 === window.React2);\n/**\n *\n * function for checking if all required fields are filled\n *\n * @function\n *\n * @param values\n */\nconst validateUserCreation = (values) => {\n    //alert(\"Validating....\")\n    const errors = {};\n    if (!values.name) {\n        errors.name = ['The name is required'];\n    }\n\n    if (!values.email) {\n        errors.email = ['The Email is required'];\n    }\n    //if (!validateEmail(values.email)) {\n    //    errors.email = ['The Email is wrong format'];\n    //}\n    return errors\n};\n\n\n/**\n *\n *  creating a new user.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const UserCreate = props => (\n    <Create {...props}>\n        <SimpleForm validate={validateUserCreation}>\n            <TextInput required source=\"name\"/>\n            <TextInput required label=\"Email\" source=\"email\" type=\"email\"/>\n            <BooleanInput source=\"activated\"/>\n        </SimpleForm>\n    </Create>\n\n);\n\n\n/**\n *\n * editing specified user.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n/*export const UserEdit = (props) => (\n\n    <Edit  {...props}>\n        <SimpleForm >\n            <div style={{width: '100%'}} >\n                <Box display=\"flex\" flexDirection=\"row\" p={1} m={1} bgcolor=\"background.paper\" >\n                    <Box width=\"40%\" bgcolor=\"white.300\">\n                        <TextInput disabled source=\"id\"/>\n                        <TextInput source=\"name\"  />\n                        <TextInput label=\"Email\" source=\"email\" type=\"email\"/>\n                        <BooleanInput source=\"activated\"/>\n                    </Box>\n                    <Box width=\"60%\" bgcolor=\"white.300\">\n                        <RoleListBox id_user={props.id}/>\n                    </Box>\n                </Box>\n            </div>\n\n        </SimpleForm>\n    </Edit>\n);*/\n\n\n/**\n *\n *  creating a new user in Popup dialog\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nexport default function CreateDrawer(props) {\n\n    const [state, setState] = React.useState({\n        bottom: false,\n        right: false,\n    });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setState({...state, [anchor]: open});\n    };\n\n    return (\n        <div>\n            {['right', 'bottom'].map((anchor) => (\n                <React.Fragment key={anchor}>\n                    <Button variant=\"contained\" color=\"primary\" data-class=\"MuiChip-label\" data-animation=\"true\"\n                            data-toggle=\"tooltip\" title=\"Klick to Quick Create user\"\n                            onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n                    <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n                        <UserCreate {...props}/>\n                    </Drawer>\n                </React.Fragment>\n            ))}\n        </div>\n    );\n}\n\n/**\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\n\n/*export const UserList = (props) => (\n\n    <React.Fragment>\n        {CreateDrawer(props)}\n        <List {...props}\n              basePath={\"/user\"}\n              resource={\"user\"}\n        >\n\n            <Datagrid>\n                <TextField source=\"id\"/>\n                <TextField source=\"name\"/>\n                <EmailField source=\"email\"/>\n                <BooleanField source=\"activated\"/>\n                <ReferenceManyField label='Roles' reference=\"user_role\" target=\"id_user\">\n                    <SingleFieldList linkType={false}>\n                        <ReferenceField source=\"id_role\" reference=\"role\">\n                            <ChipField source=\"name\"/>\n                        </ReferenceField>\n                    </SingleFieldList>\n                </ReferenceManyField>\n                <EditButton/>\n            </Datagrid>\n        </List>\n    </React.Fragment>\n\n);*/\n\n\n\nexport const UserShow = (props) => (\n    <Show {...props}>\n        <SimpleShowLayout>\n            <TextField disabled source=\"id\"/>\n            <TextField source=\"name\"/>\n            <TextField source=\"email\"/>\n            <BooleanField source=\"activated\"/>\n        </SimpleShowLayout>\n    </Show>\n\n);\n\n\n\n"]},"metadata":{},"sourceType":"module"}