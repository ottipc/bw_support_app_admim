{"ast":null,"code":"var _jsxFileName = \"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/role.js\";\nimport React, { Fragment } from 'react';\nimport { ChipField, Create, Datagrid, NumberInput, Edit, EditButton, List, ReferenceField, ReferenceManyField, SimpleForm, SingleFieldList, TextField, TextInput } from 'react-admin';\nimport { RightListBox } from \"./comp/rightlistbox\";\nimport apiService from './api/apiService';\n\nconst rolenameValidation = values => {\n  if (values.username) {\n    return fetch('/role?checkusername=' + values.username).then(response => {\n      if (response.status === 409) {\n        var err = {\n          username: 'That username is taken'\n        };\n        throw err;\n      }\n    });\n  }\n};\n/**\n*\n* creating a new role.\n*\n* @param props\n* @returns {*}import apiService from '../api/apiService';\n* @constructor\n*/\n\n\nexport const RoleCreate = props => /*#__PURE__*/React.createElement(Create, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(SimpleForm, {\n  validate: validateRoleCreation,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(TextInput, {\n  source: \"name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }\n})));\n/**\n *\n * showing list of the role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\nexport const RoleList = props => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(List, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(Datagrid, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(TextField, {\n  source: \"id\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(TextField, {\n  source: \"name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 17\n  }\n}), \"/*\", /*#__PURE__*/React.createElement(ReferenceManyField, {\n  label: \"Right\",\n  reference: \"role_right\",\n  target: \"id_role\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 19\n  }\n}, /*#__PURE__*/React.createElement(SingleFieldList, {\n  linkType: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 21\n  }\n}, /*#__PURE__*/React.createElement(ReferenceField, {\n  source: \"id_right\",\n  reference: \"right\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 25\n  }\n}, /*#__PURE__*/React.createElement(ChipField, {\n  source: \"name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 29\n  }\n})))), \"*/\", /*#__PURE__*/React.createElement(EditButton, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 17\n  }\n}))));\n/**\n *\n * editing a specified role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\nexport const RoleEdit = props => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(SimpleForm, {\n  validate: validateRoleCreation,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(TextInput, {\n  source: \"name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(RightListBox, {\n  id_role: props.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 13\n  }\n})));","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/role.js"],"names":["React","Fragment","ChipField","Create","Datagrid","NumberInput","Edit","EditButton","List","ReferenceField","ReferenceManyField","SimpleForm","SingleFieldList","TextField","TextInput","RightListBox","apiService","rolenameValidation","values","username","fetch","then","response","status","err","RoleCreate","props","validateRoleCreation","RoleList","RoleEdit","id"],"mappings":"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","sourcesContent":["import React,{ Fragment }  from 'react';\nimport {ChipField, Create, Datagrid, NumberInput, Edit, EditButton, List, ReferenceField, ReferenceManyField, SimpleForm, SingleFieldList, TextField, TextInput} from 'react-admin';\nimport {RightListBox} from \"./comp/rightlistbox\";\nimport apiService from './api/apiService';\n\nconst rolenameValidation = (values) => {\n    if (values.username) {\n        return fetch( '/role?checkusername=' + values.username).then(response => {\n            if (response.status === 409) {\n                var err = { username: 'That username is taken' }\n                throw err\n            }\n        })\n    }\n}/**\n *\n * creating a new role.\n *\n * @param props\n * @returns {*}import apiService from '../api/apiService';\n * @constructor\n */\nexport const RoleCreate = props => (\n    <Create {...props}>\n        <SimpleForm validate={validateRoleCreation}>\n            <TextInput source=\"name\" />\n        </SimpleForm>\n    </Create>\n\n);\n/**\n *\n * showing list of the role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const RoleList = (props) => (\n    <Fragment>\n        <List {...props}>\n\n            <Datagrid>\n                <TextField source=\"id\" />\n                <TextField source=\"name\" />\n                /*<ReferenceManyField label=\"Right\" reference=\"role_right\" target=\"id_role\">\n                    <SingleFieldList linkType={false}>\n                        <ReferenceField source=\"id_right\" reference=\"right\">\n                            <ChipField source=\"name\" />\n                        </ReferenceField>\n                    </SingleFieldList>\n                </ReferenceManyField>*/\n                <EditButton />\n            </Datagrid>\n        </List>\n    </Fragment>\n);\n\n/**\n *\n * editing a specified role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const RoleEdit = props => (\n    <Edit {...props}>\n        <SimpleForm  validate={validateRoleCreation}>\n            <TextInput source=\"name\"/>\n            <RightListBox id_role={props.id}/>\n        </SimpleForm>\n    </Edit>\n\n);\n\n\n\n"]},"metadata":{},"sourceType":"module"}