{"ast":null,"code":"var _jsxFileName = \"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/comp/rightlistbox.js\";\nimport React from 'react';\nimport DualListBox from 'react-dual-listbox';\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\nimport dataProvider from '../api/dataProvider';\nimport apiService from '../api/apiService';\nimport { createNotification } from './Notification';\nimport { NotificationContainer } from \"react-notifications\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n/**\n * component for creating role-right-list\n *\n * @component\n *\n */\n\nexport class RightListBox extends React.Component {\n  /**\n   * Construct right list box\n   * @param props\n   */\n  constructor(props) {\n    super(props);\n\n    this.onChange = selected => {\n      this.setState({\n        selected\n      });\n    };\n\n    this.state = {\n      allRightsrow: [],\n      allRights: [],\n      roleRights: [],\n      deletedRights: [],\n      selected: [1],\n      initialRights: [],\n      relationobjects: []\n    };\n    this.handleClick = this.updateRights.bind(this); //this.props.hurensohn = \"was\";\n  }\n  /**\n   *\n   * invoke JUST ONCE onload or reload\n   *\n   * @function\n   *\n   */\n\n\n  componentDidMount() {\n    this.setAllRightsToState();\n    this.getroleRightsToState();\n  }\n  /**\n   *\n   * send HTTP request to get Role Rights\n   * save roleRights to the state\n   *\n   *@function\n   *\n   */\n\n\n  getroleRightsToState() {\n    console.log(\"------- Set Role Rights ----------------\");\n    let roleRights = [];\n    let relations = [];\n    this.fetchRightIdsForRole().then(response => response).then(response => {\n      response.data.map(function (val) {\n        roleRights.push(val.id_right);\n        relations.push(val);\n      });\n      console.log(roleRights);\n      this.setState({\n        selected: roleRights,\n        initialRights: roleRights,\n        relationobjects: relations\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  /**\n   * function for getting the Right for a specified Role\n   *\n   * @returns {*}\n   * @function\n   */\n\n\n  fetchRightIdsForRole() {\n    return dataProvider.getList('role_right', {\n      pagination: {\n        page: 1,\n        perPage: 50\n      },\n      sort: {\n        field: 'id',\n        order: 'ASC'\n      },\n      filter: {\n        id_role: this.props.record.id\n      }\n    });\n  }\n  /**\n   *\n   *  send HTTP request to get All Rights\n   *  save AllRights to the state\n   *\n   *  @function\n   */\n\n\n  setAllRightsToState() {\n    console.log(\"------- Set All Rights ----------------\");\n    apiService.fetchAllRights().then(response => response).then(response => {\n      //  console.log(JSON.stringify(response.data));\n      this.setState({\n        allRightsraw: response.data,\n        allRights: JSON.stringify(response.data)\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  /**\n   *\n   * function for editing role-right-box\n   * add a new right to a role\n   * remove a right from a role\n   *\n   * @param e\n   * @function\n   */\n\n\n  updateRights(e) {\n    e.preventDefault();\n\n    function createRoleRight(payload) {\n      dataProvider.create('role_right', {\n        data: payload\n      }).then(response => {\n        // success side effects go here\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n    function deleteRoleRight(relationId) {\n      dataProvider.delete('role_right', {\n        id: relationId\n      }).then(response => {\n        // success side effects go here\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n    if (this) {\n      console.log(\"------- Now we aggregating ----------------\");\n      console.log(this.props);\n      let initials = this.state.initialRights;\n      let selected = this.state.selected;\n      let currentRoleId = this.props.record.id;\n      let realtions = this.state.relationobjects;\n      var tocreate = [];\n      var todelete = [];\n      this.state.allRightsraw.map(function (val) {\n        console.log(\"------- VALUE  ----------------\");\n        console.log(val.id);\n        let rightId = val.id;\n\n        if (initials.includes(rightId) && !selected.includes(rightId)) {\n          console.log(\"------- Deleting .....  ----------------\");\n          console.log(\"--------- REALTIONS -----------------\");\n          let idToDelete = realtions.map(function (val) {\n            console.log(JSON.stringify(val));\n            let definedrelation = JSON.parse(JSON.stringify(val)); // eslint-disable-next-line eqeqeq\n\n            if (definedrelation.id_role == currentRoleId && definedrelation.id_right == rightId) {\n              //console.log(\"ID : \" + definedrelation.id);\n              //console.log(rightId);\n              confirmAlert({\n                title: 'Confirm to submit',\n                message: 'Are you sure, you want to delete Right from Role.',\n                buttons: [{\n                  label: 'Yes',\n                  onClick: () => {\n                    todelete.push(rightId);\n                    deleteRoleRight(definedrelation.id);\n                    createNotification(\"warning\", \"Right deleted\", \"Right for Role deleted\");\n                    return definedrelation.id;\n                  }\n                }, {\n                  label: 'No',\n                  onClick: () => console.log(\"-----NO-----\")\n                }]\n              });\n            }\n          });\n        } else if (!initials.includes(rightId) && selected.includes(rightId)) {\n          console.log(\"------- Creating .....  ----------------\");\n          tocreate.push(rightId); //only possible to post one entry\n\n          let payload = JSON.stringify({\n            id_right: rightId,\n            id_role: currentRoleId\n          });\n          console.log(payload);\n          createRoleRight({\n            \"id_right\": rightId,\n            \"id_role\": currentRoleId\n          });\n          createNotification(\"success\", \"Right saved\", \"Right for Role persisted\");\n        }\n      });\n    }\n  }\n  /**\n   * invoke whenever there is a change\n   *\n   * @param selected\n   * @function\n   */\n\n\n  /**\n   *\n   * Rendering Role Right box\n   *\n   * @returns {*}\n   */\n  render() {\n    if (this.state.allRights.length && this.state.allRights.length != 0) {\n      var rig = JSON.parse(this.state.allRights.replace(/id/g, \"value\").replace(/name/g, \"label\"));\n      rig.map(function (val) {\n        delete val.created_at;\n        delete val.updated_at;\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DualListBox, {\n        options: rig,\n        selected: this.state.selected,\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"sabu\",\n        onClick: this.updateRights.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 17\n        }\n      }, \"Save rights\"), /*#__PURE__*/React.createElement(NotificationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DualListBox, {\n      options: this.state.selected,\n      selected: this.state.selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 22\n      }\n    }));\n  }\n\n}\nexport default RightListBox;","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/comp/rightlistbox.js"],"names":["React","DualListBox","dataProvider","apiService","createNotification","NotificationContainer","confirmAlert","RightListBox","Component","constructor","props","onChange","selected","setState","state","allRightsrow","allRights","roleRights","deletedRights","initialRights","relationobjects","handleClick","updateRights","bind","componentDidMount","setAllRightsToState","getroleRightsToState","console","log","relations","fetchRightIdsForRole","then","response","data","map","val","push","id_right","catch","err","getList","pagination","page","perPage","sort","field","order","filter","id_role","record","id","fetchAllRights","allRightsraw","JSON","stringify","e","preventDefault","createRoleRight","payload","create","error","deleteRoleRight","relationId","delete","initials","currentRoleId","realtions","tocreate","todelete","rightId","includes","idToDelete","definedrelation","parse","title","message","buttons","label","onClick","render","length","rig","replace","created_at","updated_at"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DualListBox from 'react-dual-listbox';\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\nimport dataProvider from '../api/dataProvider';\nimport apiService from '../api/apiService';\nimport {createNotification} from './Notification';\nimport {NotificationContainer} from \"react-notifications\";\nimport {confirmAlert} from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\n/**\n * component for creating role-right-list\n *\n * @component\n *\n */\nexport class RightListBox extends React.Component {\n    /**\n     * Construct right list box\n     * @param props\n     */\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            allRightsrow: [],\n            allRights: [],\n            roleRights: [],\n            deletedRights: [],\n            selected: [1],\n            initialRights: [],\n            relationobjects: []\n        };\n        this.handleClick = this.updateRights.bind(this);\n        //this.props.hurensohn = \"was\";\n    }\n\n    /**\n     *\n     * invoke JUST ONCE onload or reload\n     *\n     * @function\n     *\n     */\n    componentDidMount() {\n        this.setAllRightsToState();\n        this.getroleRightsToState();\n\n    }\n\n    /**\n     *\n     * send HTTP request to get Role Rights\n     * save roleRights to the state\n     *\n     *@function\n     *\n     */\n    getroleRightsToState() {\n        console.log(\"------- Set Role Rights ----------------\")\n        let roleRights = [];\n        let relations = [];\n        this.fetchRightIdsForRole().then(response => response)\n            .then(response => {\n                response.data.map(function (val) {\n                    roleRights.push(val.id_right);\n                    relations.push(val);\n                });\n                console.log(roleRights);\n                this.setState({\n                    selected: roleRights,\n                    initialRights: roleRights,\n                    relationobjects: relations\n                })\n            }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    /**\n     * function for getting the Right for a specified Role\n     *\n     * @returns {*}\n     * @function\n     */\n    fetchRightIdsForRole() {\n        return dataProvider.getList('role_right', {\n            pagination: {\n                page: 1,\n                perPage: 50\n            },\n            sort: {\n                field: 'id',\n                order: 'ASC'\n            },\n            filter: {\n                id_role: this.props.record.id\n            },\n        });\n    }\n\n\n    /**\n     *\n     *  send HTTP request to get All Rights\n     *  save AllRights to the state\n     *\n     *  @function\n     */\n    setAllRightsToState() {\n        console.log(\"------- Set All Rights ----------------\")\n        apiService.fetchAllRights().then(response => response)\n            .then(response => {\n                //  console.log(JSON.stringify(response.data));\n                this.setState({\n                    allRightsraw: response.data,\n                    allRights: JSON.stringify(response.data)\n                })\n            }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    /**\n     *\n     * function for editing role-right-box\n     * add a new right to a role\n     * remove a right from a role\n     *\n     * @param e\n     * @function\n     */\n    updateRights(e) {\n\n        e.preventDefault();\n        function createRoleRight(payload) {\n            dataProvider\n                .create('role_right', {data: payload})\n                .then(response => {\n                    // success side effects go here\n                    console.log(response);\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        }\n\n\n        function deleteRoleRight(relationId) {\n\n            dataProvider\n                .delete('role_right', {id: relationId})\n                .then(response => {\n                    // success side effects go here\n                    console.log(response);\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        }\n        if (this) {\n            console.log(\"------- Now we aggregating ----------------\");\n            console.log(this.props);\n\n            let initials = this.state.initialRights;\n            let selected = this.state.selected;\n            let currentRoleId = this.props.record.id;\n            let realtions = this.state.relationobjects;\n\n            var tocreate = [];\n            var todelete = [];\n\n            this.state.allRightsraw.map(function (val) {\n\n                console.log(\"------- VALUE  ----------------\");\n                console.log(val.id);\n                let rightId = val.id;\n                if (initials.includes(rightId) && !selected.includes(rightId)) {\n                    console.log(\"------- Deleting .....  ----------------\");\n\n                    console.log(\"--------- REALTIONS -----------------\");\n\n                    let idToDelete = realtions.map(function (val) {\n                        console.log(JSON.stringify(val));\n                        let definedrelation = JSON.parse(JSON.stringify(val));\n                        // eslint-disable-next-line eqeqeq\n                        if (definedrelation.id_role == currentRoleId && definedrelation.id_right == rightId) {\n                            //console.log(\"ID : \" + definedrelation.id);\n                            //console.log(rightId);\n                            confirmAlert({\n                                title: 'Confirm to submit',\n                                message: 'Are you sure, you want to delete Right from Role.',\n                                buttons: [\n                                    {\n                                        label: 'Yes',\n                                        onClick: () => {\n                                            todelete.push(rightId);\n                                            deleteRoleRight(definedrelation.id);\n                                            createNotification(\"warning\", \"Right deleted\", \"Right for Role deleted\");\n                                            return definedrelation.id;\n                                        }\n                                    },\n                                    {\n                                        label: 'No',\n                                        onClick: () => console.log(\"-----NO-----\")\n                                    }\n                                ]\n                            });\n                        }\n                    });\n\n                } else if (!initials.includes(rightId) && selected.includes(rightId)) {\n                    console.log(\"------- Creating .....  ----------------\");\n\n                    tocreate.push(rightId);\n                    //only possible to post one entry\n                    let payload = JSON.stringify({id_right: rightId, id_role: currentRoleId});\n                    console.log(payload);\n                    createRoleRight({\"id_right\": rightId, \"id_role\": currentRoleId});\n                    createNotification(\"success\", \"Right saved\", \"Right for Role persisted\");\n                }\n            });\n\n\n        }\n    }\n\n\n    /**\n     * invoke whenever there is a change\n     *\n     * @param selected\n     * @function\n     */\n    onChange = (selected) => {\n        this.setState({\n            selected\n        });\n    };\n\n    /**\n     *\n     * Rendering Role Right box\n     *\n     * @returns {*}\n     */\n    render() {\n        if (this.state.allRights.length && this.state.allRights.length != 0) {\n            var rig = JSON.parse(this.state.allRights.replace(/id/g, \"value\").replace(/name/g, \"label\"));\n            rig.map(function (val) {\n\n                delete val.created_at;\n                delete val.updated_at;\n            });\n\n            return (<div><DualListBox options={rig} selected={this.state.selected} onChange={this.onChange}/>\n                <button className=\"sabu\" onClick={this.updateRights.bind(this)}>Save rights\n                </button>\n                <NotificationContainer/>\n            </div>);\n\n        }\n        return (<div><DualListBox options={this.state.selected} selected={this.state.selected}/></div>);\n    }\n}\n\nexport default RightListBox;\n"]},"metadata":{},"sourceType":"module"}