{"ast":null,"code":"import _classCallCheck from\"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import DualListBox from'react-dual-listbox';import'react-dual-listbox/lib/react-dual-listbox.css';import{UserRightBox}from\"./userrightlistbox\";import apiService from'../api/apiService';import ExpansionPanel from\"@material-ui/core/ExpansionPanel\";import Typography from\"@material-ui/core/Typography\";import ExpansionPanelDetails from\"@material-ui/core/ExpansionPanelDetails\";import{makeStyles}from\"@material-ui/core/styles\";import{NotificationContainer}from'react-notifications';import{createNotification}from'./Notification';import'font-awesome/css/font-awesome.css';import'react-notifications/lib/notifications.css';import{confirmAlert}from'react-confirm-alert';import'react-confirm-alert/src/react-confirm-alert.css';/**\n * style\n *\n * @type {((props?: any) => ClassNameMap<string>) | *}\n */var useStyles=makeStyles(function(theme){return{list:{width:250},fullList:{width:'auto'},root:{//flexGrow: 1,\n},heading:{fontSize:theme.typography.pxToRem(15),flexBasis:'33.33%',flexShrink:0},secondaryHeading:{fontSize:theme.typography.pxToRem(15),color:theme.palette.text.secondary},paper:{padding:theme.spacing(2),textAlign:'center',color:theme.palette.text.secondary}};});/**\n * standard value for user role box\n *\n * @type {*[]}\n */var options=[{value:'one',label:'Option One'},{value:'two',label:'Option Two'}];/**\n *\n * Component for setting user-role-box\n * be shown in user.js\n *\n * @component\n *\n */export var RoleListBox=/*#__PURE__*/function(_React$Component){_inherits(RoleListBox,_React$Component);/**\n     *  CONSTRUCT user-role-box\n     *\n     * @param props\n     * @constructor\n     */function RoleListBox(props){var _this;_classCallCheck(this,RoleListBox);_this=_possibleConstructorReturn(this,_getPrototypeOf(RoleListBox).call(this,props));_this.state={selected:['1','2']};_this.onChange=function(selected){//alert(selected)\n_this.setState({selected:selected,userroles:selected});//UserRightBox.getDerivedStateFromProps()\n};console.log(\"*** CONSTRUCT ROLE LIST BOX ***\");console.log(props);var id_user=props.id_user;console.log(id_user);_this.state={allrolesrow:[],allroles:[],userroles:[],deletedroles:[],selected:[1],initialroles:[],relationobjects:[]};return _this;}/**\n     *\n     * invoke JUST ONCE onload or reload\n     *\n     * @function\n     *\n     */_createClass(RoleListBox,[{key:\"componentDidMount\",value:function componentDidMount(){console.log(\"*** ROLE LIST BOX DID MOUNT ***\");this.setAllRolesToState();this.getUserRolesToState();}/**\n     *\n     * send HTTP request to get User Roles\n     * save UserRoles to the state\n     *\n     * @function\n     */},{key:\"getUserRolesToState\",value:function getUserRolesToState(){var _this2=this;var userroles=[];var relations=[];console.log(this.props);apiService.fetchRoleListForUser(this.props.id_user).then(function(response){return response;}).then(function(response){response.data.map(function(val){userroles.push(val.id_role);relations.push(val);});_this2.setState({selected:userroles,initialroles:userroles,relationobjects:relations});}).catch(function(err){console.log(err);});}/**\n     *\n     * send HTTP request to get All Roles\n     * save AllRoles to the state\n     *\n     * @function\n     */},{key:\"setAllRolesToState\",value:function setAllRolesToState(){var _this3=this;apiService.fetchAllRoleObjects().then(function(response){_this3.setState({allrolesraw:response.data,allroles:JSON.stringify(response.data)});}).catch(function(err){console.log(err);});}/**\n     *\n     * function for editing user-role-box\n     * create a new role to user\n     * remove a role from user\n     *\n     * @param event\n     * @function\n     */},{key:\"updateRoles\",value:function updateRoles(event){event.preventDefault();if(this){var initials=this.state.initialroles;var selected=this.state.selected;var currentUserId=this.props.id_user;var realtions=this.state.relationobjects;var toCreate=[];var toDelete=[];this.state.allrolesraw.map(function(val){console.log(\"------- VALUE  ----------------\");//  console.log(val.id);\nvar roleId=val.id;if(initials.includes(roleId)&&!selected.includes(roleId)){var idToDelete=realtions.map(function(val){//console.log(JSON.stringify(val));\nvar definedRelation=JSON.parse(JSON.stringify(val));if(definedRelation.id_user==currentUserId&&definedRelation.id_role==roleId){confirmAlert({title:'Confirm to submit',message:'Are you sure you want to delete Role from User.',buttons:[{label:'Yes',onClick:function onClick(){toDelete.push(roleId);console.log(\"------- to delete  ----------------\");console.log(definedRelation.id);apiService.deleteUserRole(definedRelation.id);createNotification(\"warning\",\"Role deleted\",\"Role for User deleted\");return definedRelation.id;}},{label:'No',onClick:function onClick(){return console.log(\"-----NO-----\");}}]});}});}else if(!initials.includes(roleId)&&selected.includes(roleId)){toCreate.push(roleId);//only possible to post one entry\napiService.createUserRole({\"id_role\":roleId,\"id_user\":currentUserId});createNotification(\"success\",\"Role saved\",\"Role for User persisted\");}});}}/**\n     * invoke whenever there is a change\n     *\n     * @param selected\n     * @function\n     */},{key:\"changingRightsChild\",/**\n     *\n     * @param text\n     * @function\n     */value:function changingRightsChild(text){}/**\n     * rendering role list box\n     * @returns {*}\n     */},{key:\"render\",value:function render(){var _this4=this;if(this.state.allroles&&this.state.allroles.length>0){var parsedJsonObject=JSON.parse(this.state.allroles.replace(/id/g,\"value\").replace(/name/g,\"label\"));return React.createElement(\"div\",null,React.createElement(DualListBox,{showHeaderLabels:\"true\",options:parsedJsonObject,selected:this.state.selected,onChange:this.onChange}),React.createElement(NotificationContainer,null),React.createElement(ExpansionPanel,{defaultExpanded:true},React.createElement(Typography,{className:useStyles.heading},\"Rights of User\"),React.createElement(ExpansionPanelDetails,null,React.createElement(UserRightBox,{selected:this.state.selected,userid:this.props.id_user,k:true}))),React.createElement(\"button\",{className:\"sabu\",onChange:function onChange(e){return _this4.changingRightsChild(e.target.value);},onClick:function onClick(event){return _this4.updateRoles(event);}},React.createElement(\"i\",{className:\"fa fa-save\"}),\"Save\"));}return React.createElement(\"div\",null,React.createElement(DualListBox,{options:options,selected:this.state.selected,icons:{moveLeft:React.createElement(\"span\",{className:\"fa fa-chevron-left\"}),moveAllLeft:[React.createElement(\"span\",{key:0,className:\"fa fa-chevron-left\"}),React.createElement(\"span\",{key:1,className:\"fa fa-chevron-left\"})],moveRight:React.createElement(\"span\",{className:\"fa fa-chevron-right\"}),moveAllRight:[React.createElement(\"span\",{key:0,className:\"fa fa-chevron-right\"}),React.createElement(\"span\",{key:1,className:\"fa fa-chevron-right\"})],moveDown:React.createElement(\"span\",{className:\"fa fa-chevron-down\"}),moveUp:React.createElement(\"span\",{className:\"fa fa-chevron-up\"})}}));}}]);return RoleListBox;}(React.Component);export default RoleListBox;","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/comp/rolelistbox.js"],"names":["React","DualListBox","UserRightBox","apiService","ExpansionPanel","Typography","ExpansionPanelDetails","makeStyles","NotificationContainer","createNotification","confirmAlert","useStyles","theme","list","width","fullList","root","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","paper","padding","spacing","textAlign","options","value","label","RoleListBox","props","state","selected","onChange","setState","userroles","console","log","id_user","allrolesrow","allroles","deletedroles","initialroles","relationobjects","setAllRolesToState","getUserRolesToState","relations","fetchRoleListForUser","then","response","data","map","val","push","id_role","catch","err","fetchAllRoleObjects","allrolesraw","JSON","stringify","event","preventDefault","initials","currentUserId","realtions","toCreate","toDelete","roleId","id","includes","idToDelete","definedRelation","parse","title","message","buttons","onClick","deleteUserRole","createUserRole","length","parsedJsonObject","replace","e","changingRightsChild","target","updateRoles","moveLeft","moveAllLeft","moveRight","moveAllRight","moveDown","moveUp","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DualListBox from 'react-dual-listbox';\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\nimport {UserRightBox} from \"./userrightlistbox\";\nimport apiService from '../api/apiService';\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {NotificationContainer} from 'react-notifications';\nimport {createNotification} from './Notification';\nimport 'font-awesome/css/font-awesome.css'\nimport 'react-notifications/lib/notifications.css';\nimport {confirmAlert} from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\n\n\n\n/**\n * style\n *\n * @type {((props?: any) => ClassNameMap<string>) | *}\n */\nconst useStyles = makeStyles((theme) => ({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    root: {\n        //flexGrow: 1,\n    }, heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\n/**\n * standard value for user role box\n *\n * @type {*[]}\n */\nconst options = [{\n    value: 'one',\n    label: 'Option One'\n},\n    {\n        value: 'two',\n        label: 'Option Two'\n    },\n];\n\n/**\n *\n * Component for setting user-role-box\n * be shown in user.js\n *\n * @component\n *\n */\nexport class RoleListBox extends React.Component {\n\n    state = {\n        selected: ['1', '2']\n    };\n\n    /**\n     *  CONSTRUCT user-role-box\n     *\n     * @param props\n     * @constructor\n     */\n    constructor(props) {\n        super(props);\n        console.log(\"*** CONSTRUCT ROLE LIST BOX ***\");\n        console.log(props);\n        let id_user = props.id_user;\n        console.log(id_user);\n\n\n        this.state = {\n            allrolesrow: [],\n            allroles: [],\n            userroles: [],\n            deletedroles: [],\n            selected: [1],\n            initialroles: [],\n            relationobjects: []\n        };\n\n    }\n\n    /**\n     *\n     * invoke JUST ONCE onload or reload\n     *\n     * @function\n     *\n     */\n    componentDidMount() {\n        console.log(\"*** ROLE LIST BOX DID MOUNT ***\");\n        this.setAllRolesToState();\n        this.getUserRolesToState();\n\n    }\n\n    /**\n     *\n     * send HTTP request to get User Roles\n     * save UserRoles to the state\n     *\n     * @function\n     */\n    getUserRolesToState() {\n        let userroles = [];\n        let relations = [];\n        console.log(this.props)\n        apiService.fetchRoleListForUser(this.props.id_user).then(response => response)\n            .then(response => {\n                response.data.map(function (val) {\n                    userroles.push(val.id_role);\n                    relations.push(val);\n                });\n                this.setState({\n                    selected: userroles,\n                    initialroles: userroles,\n                    relationobjects: relations\n                })\n            }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    /**\n     *\n     * send HTTP request to get All Roles\n     * save AllRoles to the state\n     *\n     * @function\n     */\n    setAllRolesToState() {\n        apiService.fetchAllRoleObjects().then(response => {\n            this.setState({\n                allrolesraw: response.data,\n                allroles: JSON.stringify(response.data)\n            })\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    /**\n     *\n     * function for editing user-role-box\n     * create a new role to user\n     * remove a role from user\n     *\n     * @param event\n     * @function\n     */\n    updateRoles(event) {\n        event.preventDefault();\n        if (this) {\n            let initials = this.state.initialroles;\n            let selected = this.state.selected;\n            let currentUserId = this.props.id_user;\n            let realtions = this.state.relationobjects;\n            let toCreate = [];\n            let toDelete = [];\n\n\n            this.state.allrolesraw.map(function (val) {\n\n                console.log(\"------- VALUE  ----------------\");\n              //  console.log(val.id);\n                let roleId = val.id;\n                if (initials.includes(roleId) && !selected.includes(roleId)) {\n                    let idToDelete = realtions.map(function (val) {\n                        //console.log(JSON.stringify(val));\n                        let definedRelation = JSON.parse(JSON.stringify(val));\n                        if (definedRelation.id_user == currentUserId && definedRelation.id_role == roleId) {\n\n                            confirmAlert({\n                                title: 'Confirm to submit',\n                                message: 'Are you sure you want to delete Role from User.',\n                                buttons: [\n                                    {\n                                        label: 'Yes',\n                                        onClick: () => {\n                                            toDelete.push(roleId);\n                                            console.log(\"------- to delete  ----------------\");\n                                            console.log(definedRelation.id);\n                                            apiService.deleteUserRole(definedRelation.id);\n                                            createNotification(\"warning\", \"Role deleted\", \"Role for User deleted\");\n                                            return definedRelation.id;\n                                        }\n                                    },\n                                    {\n                                        label: 'No',\n                                        onClick: () => console.log(\"-----NO-----\")\n                                    }\n                                ]\n                            });\n                        }\n                    });\n\n                } else if (!initials.includes(roleId) && selected.includes(roleId)) {\n                    toCreate.push(roleId);\n                    //only possible to post one entry\n                    apiService.createUserRole({\"id_role\": roleId, \"id_user\": currentUserId});\n                    createNotification(\"success\", \"Role saved\", \"Role for User persisted\");\n                }\n            });\n        }\n    }\n\n\n    /**\n     * invoke whenever there is a change\n     *\n     * @param selected\n     * @function\n     */\n    onChange = (selected) => {\n        //alert(selected)\n        this.setState({\n            selected: selected,\n            userroles: selected\n        });\n        //UserRightBox.getDerivedStateFromProps()\n    };\n\n    /**\n     *\n     * @param text\n     * @function\n     */\n    changingRightsChild(text) {\n    }\n\n\n\n\n    /**\n     * rendering role list box\n     * @returns {*}\n     */\n    render() {\n        if (this.state.allroles && this.state.allroles.length > 0) {\n            const parsedJsonObject = JSON.parse(this.state.allroles.replace(/id/g, \"value\").replace(/name/g, \"label\"));\n\n            return (<div >\n                <DualListBox showHeaderLabels=\"true\" options={parsedJsonObject} selected={this.state.selected}\n                             onChange={this.onChange}/>\n\n                <NotificationContainer/>\n                <ExpansionPanel defaultExpanded={true}>\n                    <Typography className={useStyles.heading}>Rights of User</Typography>\n                    <ExpansionPanelDetails >\n                        <UserRightBox selected={this.state.selected} userid={this.props.id_user} k />\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <button\n                    className=\"sabu\"\n                    onChange={(e) => this.changingRightsChild(e.target.value)}\n                    onClick={(event) => this.updateRoles(event)}><i className=\"fa fa-save\"></i>\n                    Save\n                </button>\n            </div>);\n\n        }\n        return (<div  ><DualListBox  options={options} selected={this.state.selected}\n                                  icons={{\n                                      moveLeft: <span className=\"fa fa-chevron-left\"/>,\n                                      moveAllLeft: [\n                                          <span key={0} className=\"fa fa-chevron-left\"/>,\n                                          <span key={1} className=\"fa fa-chevron-left\"/>,\n                                      ],\n                                      moveRight: <span className=\"fa fa-chevron-right\"/>,\n                                      moveAllRight: [\n                                          <span key={0} className=\"fa fa-chevron-right\"/>,\n                                          <span key={1} className=\"fa fa-chevron-right\"/>,\n                                      ],\n                                      moveDown: <span className=\"fa fa-chevron-down\"/>,\n                                      moveUp: <span className=\"fa fa-chevron-up\"/>,\n                                  }}\n\n\n                                   /></div>);\n    }\n}\n\nexport default RoleListBox;\n"]},"metadata":{},"sourceType":"module"}