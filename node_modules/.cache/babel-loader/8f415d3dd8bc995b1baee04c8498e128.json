{"ast":null,"code":"var _jsxFileName = \"/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/role.js\";\nimport React, { Fragment } from 'react';\nimport { ChipField, Create, Datagrid, NumberInput, Edit, EditButton, List, ReferenceField, ReferenceManyField, SimpleForm, SingleFieldList, TextField, TextInput } from 'react-admin';\nimport { RightListBox } from \"./comp/rightlistbox\";\nimport apiService from './api/apiService';\n\nconst validateRoleCreation = values => {\n  let result = apiService.fetchRoleObjectForName(values.name).then(function (_result) {\n    let result = _a.json;\n    console.log(\"RESOURCE GET ONE : \" + resource);\n\n    if (resource === \"user_all\") {\n      json = JSON.parse(JSON.stringify(_a.json).replace(\"\\\"id\\\":\", \"\\\"addressid\\\":\")).map(resource => ({ ...resource,\n        id: resource.addressid\n      }));\n    }\n\n    console.log(\"JOSN GET ONE: \" + JSON.stringify(json));\n    return {\n      data: json\n    };\n  });\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = ['The Name is required'];\n  }\n\n  console.log(\"Result of fetching Role : \" + result);\n\n  if (result) {\n    errors.exististing = ['The name already exists'];\n    console.log(\"Form Errors : \" + errors);\n  }\n\n  return errors;\n};\n/**\n *\n * creating a new role.\n *\n * @param props\n * @returns {*}import apiService from '../api/apiService';\n * @constructor\n */\n\n\nexport const RoleCreate = props => /*#__PURE__*/React.createElement(Create, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(SimpleForm, {\n  validate: validateRoleCreation,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(TextInput, {\n  source: \"name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }\n})));\n/**\n *\n * showing list of the role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\nexport const RoleList = props => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(List, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(Datagrid, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(TextField, {\n  source: \"id\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(TextField, {\n  source: \"name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 17\n  }\n}), \"/*\", /*#__PURE__*/React.createElement(ReferenceManyField, {\n  label: \"Right\",\n  reference: \"role_right\",\n  target: \"id_role\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 19\n  }\n}, /*#__PURE__*/React.createElement(SingleFieldList, {\n  linkType: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 21\n  }\n}, /*#__PURE__*/React.createElement(ReferenceField, {\n  source: \"id_right\",\n  reference: \"right\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 25\n  }\n}, /*#__PURE__*/React.createElement(ChipField, {\n  source: \"name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 29\n  }\n})))), \"*/\", /*#__PURE__*/React.createElement(EditButton, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 17\n  }\n}))));\n/**\n *\n * editing a specified role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\nexport const RoleEdit = props => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(SimpleForm, {\n  validate: validateRoleCreation,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(TextInput, {\n  source: \"name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(RightListBox, {\n  id_role: props.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 13\n  }\n})));","map":{"version":3,"sources":["/home/codi/Entwicklung/workspace-webstorm/idendity-admin/src/role.js"],"names":["React","Fragment","ChipField","Create","Datagrid","NumberInput","Edit","EditButton","List","ReferenceField","ReferenceManyField","SimpleForm","SingleFieldList","TextField","TextInput","RightListBox","apiService","validateRoleCreation","values","result","fetchRoleObjectForName","name","then","_result","_a","json","console","log","resource","JSON","parse","stringify","replace","map","id","addressid","data","errors","exististing","RoleCreate","props","RoleList","RoleEdit"],"mappings":"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","sourcesContent":["import React,{ Fragment }  from 'react';\nimport {ChipField, Create, Datagrid, NumberInput, Edit, EditButton, List, ReferenceField, ReferenceManyField, SimpleForm, SingleFieldList, TextField, TextInput} from 'react-admin';\nimport {RightListBox} from \"./comp/rightlistbox\";\nimport apiService from './api/apiService';\n\nconst validateRoleCreation = (values) => {\n    \n    \n  let result = apiService.fetchRoleObjectForName(values.name).then(function (_result) {\n      let result = _a.json;\n      console.log(\"RESOURCE GET ONE : \" + resource);\n      if(resource=== \"user_all\"){\n        json = JSON.parse(JSON.stringify(_a.json).replace(\"\\\"id\\\":\", \"\\\"addressid\\\":\")).map(resource => ({ ...resource, id: resource.addressid }));\n      }\n      console.log(\"JOSN GET ONE: \" + JSON.stringify(json));\n      return ({data: json});\n  });\n\n  \n    const errors = {};\n    if (!values.name) {\n        errors.name = ['The Name is required'];\n    }\n\n    console.log(\"Result of fetching Role : \" + result);\n    if (result) {\n        errors.exististing = ['The name already exists'];\n        console.log(\"Form Errors : \" + errors);\n    }\n    return errors\n};\n/**\n *\n * creating a new role.\n *\n * @param props\n * @returns {*}import apiService from '../api/apiService';\n * @constructor\n */\nexport const RoleCreate = props => (\n    <Create {...props}>\n        <SimpleForm validate={validateRoleCreation}>\n            <TextInput source=\"name\" />\n        </SimpleForm>\n    </Create>\n\n);\n/**\n *\n * showing list of the role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const RoleList = (props) => (\n    <Fragment>\n        <List {...props}>\n\n            <Datagrid>\n                <TextField source=\"id\" />\n                <TextField source=\"name\" />\n                /*<ReferenceManyField label=\"Right\" reference=\"role_right\" target=\"id_role\">\n                    <SingleFieldList linkType={false}>\n                        <ReferenceField source=\"id_right\" reference=\"right\">\n                            <ChipField source=\"name\" />\n                        </ReferenceField>\n                    </SingleFieldList>\n                </ReferenceManyField>*/\n                <EditButton />\n            </Datagrid>\n        </List>\n    </Fragment>\n);\n\n/**\n *\n * editing a specified role.\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const RoleEdit = props => (\n    <Edit {...props}>\n        <SimpleForm  validate={validateRoleCreation}>\n            <TextInput source=\"name\"/>\n            <RightListBox id_role={props.id}/>\n        </SimpleForm>\n    </Edit>\n\n);\n\n\n\n"]},"metadata":{},"sourceType":"module"}